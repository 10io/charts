{"version":3,"file":"frappe-charts.min.js","sources":["../src/scripts/helpers/dom.js","../src/scripts/helpers/utils.js","../src/scripts/charts.js","../src/scripts/objects/SvgTip.js","../src/scripts/charts/BaseChart.js","../src/scripts/charts/AxisChart.js","../src/scripts/charts/BarChart.js","../src/scripts/charts/LineChart.js","../src/scripts/charts/ScatterChart.js","../src/scripts/charts/PercentageChart.js","../src/scripts/charts/PieChart.js","../src/scripts/charts/Heatmap.js"],"sourcesContent":["export default function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\n\n$.findNodeIndex = (node) =>\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n};\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\n$.createSVG = (tag, o) => {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\t\t}\n\t\telse {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n};\n\n$.runSVGAnimation = (svg_container, elements) => {\n\t// let parent = elements[0][0]['unit'].parentNode;\n\n\tlet new_elements = [];\n\tlet anim_elements = [];\n\n\telements.map(element => {\n\t\tlet obj = element[0];\n\t\tlet parent = obj.unit.parentNode;\n\t\t// let index = let findNodeIndex(obj.unit);\n\n\t\tlet anim_element, new_element;\n\n\t\telement[0] = obj.unit;\n\t\t[anim_element, new_element] = $.animateSVG(...element);\n\n\t\tnew_elements.push(new_element);\n\t\tanim_elements.push([anim_element, parent]);\n\n\t\tparent.replaceChild(anim_element, obj.unit);\n\n\t\tif(obj.array) {\n\t\t\tobj.array[obj.index] = new_element;\n\t\t} else {\n\t\t\tobj.object[obj.key] = new_element;\n\t\t}\n\t});\n\n\tlet anim_svg = svg_container.cloneNode(true);\n\n\tanim_elements.map((anim_element, i) => {\n\t\tanim_element[1].replaceChild(new_elements[i], anim_element[0]);\n\t\telements[i][0] = new_elements[i];\n\t});\n\n\treturn anim_svg;\n};\n\n$.transform = (element, style)=>{\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n};\n\n$.animateSVG = (element, props, dur, easing_type=\"linear\", type=undefined, old_values={}) => {\n\n\tlet anim_element = element.cloneNode(true);\n\tlet new_element = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animate_element;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimate_element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimate_element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet current_value = old_values[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet anim_attr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: current_value,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: current_value + \";\" + value,\n\t\t\tkeySplines: EASING[easing_type],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanim_attr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in anim_attr) {\n\t\t\tanimate_element.setAttribute(i, anim_attr[i]);\n\t\t}\n\n\t\tanim_element.appendChild(animate_element);\n\n\t\tif(type) {\n\t\t\tnew_element.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnew_element.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [anim_element, new_element];\n};\n\n$.offset = (element) => {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n};\n\n$.isElementInViewport = (el) => {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n};\n\n$.bind = (element, o) => {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n};\n\n$.unbind = (element, o) => {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n};\n\n$.fire = (target, type, properties) => {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n};\n","export function float_2(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\nexport function arrays_equal(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet are_equal = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) are_equal = false;\n\t});\n\treturn are_equal;\n}\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(col,amt) {\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function shuffle(array) {\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\n\tvar currentIndex = array.length, temporaryValue, randomIndex;\n\n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\n\treturn array;\n}\n","import '../styles/charts.less';\n\nimport BarChart from './charts/BarChart';\nimport LineChart from './charts/LineChart';\nimport ScatterChart from './charts/ScatterChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\n\n// if (ENV !== 'production') {\n// \t// Enable LiveReload\n// \tdocument.write(\n// \t\t'<script src=\"http://' + (location.host || 'localhost').split(':')[0] +\n// \t\t':35729/livereload.js?snipver=1\"></' + 'script>'\n// \t);\n// }\n\nconst chartTypes = {\n\tline: LineChart,\n\tbar: BarChart,\n\tscatter: ScatterChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart\n};\n\nfunction getChartByType(chartType = 'line', options) {\n\tif (!chartTypes[chartType]) {\n\t\treturn new LineChart(options);\n\t}\n\n\treturn new chartTypes[chartType](options);\n}\n\nexport default class Chart {\n\tconstructor(args) {\n\t\treturn getChartByType(args.type, arguments[0]);\n\t}\n}\n","import $ from '../helpers/dom';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.title_name = '';\n\t\tthis.title_value = '';\n\t\tthis.list_values = [];\n\t\tthis.title_value_first = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.make_tooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calc_position();\n\t\t// this.show_tip();\n\t}\n\n\tmake_tooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hide_tip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.data_point_list = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hide_tip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.title_value_first) {\n\t\t\ttitle = `<strong>${this.title_value}</strong>${this.title_name}`;\n\t\t} else {\n\t\t\ttitle = `${this.title_name}<strong>${this.title_value}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.data_point_list.innerHTML = '';\n\n\t\tthis.list_values.map((set) => {\n\t\t\tlet li = $.create('li', {\n\t\t\t\tclassName: `border-top ${set.color || 'black'}`,\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${set.value ? set.value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.data_point_list.appendChild(li);\n\t\t});\n\t}\n\n\tcalc_position() {\n\t\tthis.top = this.y - this.container.offsetHeight;\n\t\tthis.left = this.x - this.container.offsetWidth/2;\n\t\tlet max_left = this.parent.offsetWidth - this.container.offsetWidth;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > max_left) {\n\t\t\tlet delta = this.left - max_left;\n\t\t\tpointer.style.left = `calc(50% + ${delta}px)`;\n\t\t\tthis.left = max_left;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tset_values(x, y, title_name = '', title_value = '', list_values = [], title_value_first = 0) {\n\t\tthis.title_name = title_name;\n\t\tthis.title_value = title_value;\n\t\tthis.list_values = list_values;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.title_value_first = title_value_first;\n\t\tthis.refresh();\n\t}\n\n\thide_tip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshow_tip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","import SvgTip from '../objects/SvgTip';\nimport $ from '../helpers/dom';\nimport Chart from '../charts';\n\nexport default class BaseChart {\n\tconstructor({\n\t\theight = 240,\n\n\t\ttitle = '', subtitle = '',\n\n\t\tformat_lambdas = {},\n\n\t\tsummary = [],\n\n\t\tis_navigable = 0,\n\t\thas_legend = 0,\n\n\t\ttype = '', // eslint-disable-line no-unused-vars\n\n\t\tparent,\n\t\tdata\n\t}) {\n\t\tthis.raw_chart_args = arguments[0];\n\n\t\tthis.parent = document.querySelector(parent);\n\t\tthis.title = title;\n\t\tthis.subtitle = subtitle;\n\n\t\tthis.data = data;\n\t\tthis.format_lambdas = format_lambdas;\n\n\t\tthis.specific_values = data.specific_values || [];\n\t\tthis.summary = summary;\n\n\t\tthis.is_navigable = is_navigable;\n\t\tif(this.is_navigable) {\n\t\t\tthis.current_index = 0;\n\t\t}\n\t\tthis.has_legend = has_legend;\n\n\t\tthis.chart_types = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\n\t\tthis.set_margins(height);\n\t}\n\n\tget_different_chart(type) {\n\t\tif(!this.chart_types.includes(type)) {\n\t\t\tconsole.error(`'${type}' is not a valid chart type.`);\n\t\t}\n\t\tif(type === this.type) return;\n\n\t\t// Only across compatible types\n\t\tlet compatible_types = {\n\t\t\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\t\t\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\t\t\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\t\t\tscatter: ['line', 'bar', 'percentage', 'pie'],\n\t\t\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\t\t\theatmap: []\n\t\t};\n\n\t\tif(!compatible_types[this.type].includes(type)) {\n\t\t\tconsole.error(`'${this.type}' chart cannot be converted to a '${type}' chart.`);\n\t\t}\n\n\t\t// Okay, this is anticlimactic\n\t\t// this function will need to actually be 'change_chart_type(type)'\n\t\t// that will update only the required elements, but for now ...\n\t\treturn new Chart({\n\t\t\tparent: this.raw_chart_args.parent,\n\t\t\ttitle: this.title,\n\t\t\tdata: this.raw_chart_args.data,\n\t\t\ttype: type,\n\t\t\theight: this.raw_chart_args.height\n\t\t});\n\t}\n\n\tset_margins(height) {\n\t\tthis.base_height = height;\n\t\tthis.height = height - 40;\n\t\tthis.translate_x = 60;\n\t\tthis.translate_y = 10;\n\t}\n\n\tsetup() {\n\t\tif(!this.parent) {\n\t\t\tconsole.error(\"No parent element to render on was provided.\");\n\t\t\treturn;\n\t\t}\n\t\tthis.bind_window_events();\n\t\tthis.refresh(true);\n\t}\n\n\tbind_window_events() {\n\t\twindow.addEventListener('resize', () => this.refresh());\n\t\twindow.addEventListener('orientationchange', () => this.refresh());\n\t}\n\n\trefresh(init=false) {\n\t\tthis.setup_base_values();\n\t\tthis.set_width();\n\n\t\tthis.setup_container();\n\t\tthis.setup_components();\n\n\t\tthis.setup_values();\n\t\tthis.setup_utils();\n\n\t\tthis.make_graph_components(init);\n\t\tthis.make_tooltip();\n\n\t\tif(this.summary.length > 0) {\n\t\t\tthis.show_custom_summary();\n\t\t} else {\n\t\t\tthis.show_summary();\n\t\t}\n\n\t\tif(this.is_navigable) {\n\t\t\tthis.setup_navigation(init);\n\t\t}\n\t}\n\n\tset_width() {\n\t\tlet special_values_width = 0;\n\t\tthis.specific_values.map(val => {\n\t\t\tif(this.get_strwidth(val.title) > special_values_width) {\n\t\t\t\tspecial_values_width = this.get_strwidth(val.title) - 40;\n\t\t\t}\n\t\t});\n\t\tthis.base_width = this.parent.offsetWidth - special_values_width;\n\t\tthis.width = this.base_width - this.translate_x * 2;\n\t}\n\n\tsetup_base_values() {}\n\n\tsetup_container() {\n\t\tthis.container = $.create('div', {\n\t\t\tclassName: 'chart-container',\n\t\t\tinnerHTML: `<h6 class=\"title\">${this.title}</h6>\n\t\t\t\t<h6 class=\"sub-title uppercase\">${this.subtitle}</h6>\n\t\t\t\t<div class=\"frappe-chart graphics\"></div>\n\t\t\t\t<div class=\"graph-stats-container\"></div>`\n\t\t});\n\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\t\tthis.parent.appendChild(this.container);\n\n\t\tthis.chart_wrapper = this.container.querySelector('.frappe-chart');\n\t\tthis.stats_wrapper = this.container.querySelector('.graph-stats-container');\n\n\t\tthis.make_chart_area();\n\t\tthis.make_draw_area();\n\t}\n\n\tmake_chart_area() {\n\t\tthis.svg = $.createSVG('svg', {\n\t\t\tclassName: 'chart',\n\t\t\tinside: this.chart_wrapper,\n\t\t\twidth: this.base_width,\n\t\t\theight: this.base_height\n\t\t});\n\n\t\tthis.svg_defs = $.createSVG('defs', {\n\t\t\tinside: this.svg,\n\t\t});\n\n\t\treturn this.svg;\n\t}\n\n\tmake_draw_area() {\n\t\tthis.draw_area = $.createSVG(\"g\", {\n\t\t\tclassName: this.type + '-chart',\n\t\t\tinside: this.svg,\n\t\t\ttransform: `translate(${this.translate_x}, ${this.translate_y})`\n\t\t});\n\t}\n\n\tsetup_components() { }\n\n\tmake_tooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.chart_wrapper,\n\t\t});\n\t\tthis.bind_tooltip();\n\t}\n\n\n\tshow_summary() {}\n\tshow_custom_summary() {\n\t\tthis.summary.map(d => {\n\t\t\tlet stats = $.create('div', {\n\t\t\t\tclassName: 'stats',\n\t\t\t\tinnerHTML: `<span class=\"indicator ${d.color}\">${d.title}: ${d.value}</span>`\n\t\t\t});\n\t\t\tthis.stats_wrapper.appendChild(stats);\n\t\t});\n\t}\n\n\tsetup_navigation(init=false) {\n\t\tthis.make_overlay();\n\n\t\tif(init) {\n\t\t\tthis.bind_overlay();\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif($.isElementInViewport(this.chart_wrapper)) {\n\t\t\t\t\te = e || window.event;\n\n\t\t\t\t\tif (e.keyCode == '37') {\n\t\t\t\t\t\tthis.on_left_arrow();\n\t\t\t\t\t} else if (e.keyCode == '39') {\n\t\t\t\t\t\tthis.on_right_arrow();\n\t\t\t\t\t} else if (e.keyCode == '38') {\n\t\t\t\t\t\tthis.on_up_arrow();\n\t\t\t\t\t} else if (e.keyCode == '40') {\n\t\t\t\t\t\tthis.on_down_arrow();\n\t\t\t\t\t} else if (e.keyCode == '13') {\n\t\t\t\t\t\tthis.on_enter_key();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmake_overlay() {}\n\tbind_overlay() {}\n\tbind_units() {}\n\n\ton_left_arrow() {}\n\ton_right_arrow() {}\n\ton_up_arrow() {}\n\ton_down_arrow() {}\n\ton_enter_key() {}\n\n\tget_data_point(index=this.current_index) {\n\t\t// check for length\n\t\tlet data_point = {\n\t\t\tindex: index\n\t\t};\n\t\tlet y = this.y[0];\n\t\t['svg_units', 'y_tops', 'values'].map(key => {\n\t\t\tlet data_key = key.slice(0, key.length-1);\n\t\t\tdata_point[data_key] = y[key][index];\n\t\t});\n\t\tdata_point.label = this.x[index];\n\t\treturn data_point;\n\t}\n\n\tupdate_current_data_point(index) {\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= this.x.length) index = this.x.length - 1;\n\t\tif(index === this.current_index) return;\n\t\tthis.current_index = index;\n\t\t$.fire(this.parent, \"data-select\", this.get_data_point());\n\t}\n\n\t// Helpers\n\tget_strwidth(string) {\n\t\treturn (string+\"\").length * 8;\n\t}\n\n\t// Objects\n\tsetup_utils() { }\n}\n","import $ from '../helpers/dom';\nimport { float_2, arrays_equal } from '../helpers/utils';\nimport BaseChart from './BaseChart';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.x = this.data.labels;\n\t\tthis.y = this.data.datasets;\n\n\t\tthis.is_series = args.is_series;\n\n\t\tthis.get_y_label = this.format_lambdas.y_label;\n\t\tthis.get_y_tooltip = this.format_lambdas.y_tooltip;\n\t\tthis.get_x_tooltip = this.format_lambdas.x_tooltip;\n\n\t\tthis.colors = ['green', 'blue', 'violet', 'red', 'orange',\n\t\t\t'yellow', 'light-blue', 'light-green', 'purple', 'magenta'];\n\n\t\tthis.zero_line = this.height;\n\t}\n\n\tsetup_values() {\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values = d.values.map(val => (!isNaN(val) ? val : 0));\n\t\t});\n\t\tthis.setup_x();\n\t\tthis.setup_y();\n\t}\n\n\tsetup_x() {\n\t\tthis.set_avg_unit_width_and_x_offset();\n\n\t\tif(this.x_axis_positions) {\n\t\t\tthis.x_old_axis_positions =  this.x_axis_positions.slice();\n\t\t}\n\t\tthis.x_axis_positions = this.x.map((d, i) =>\n\t\t\tfloat_2(this.x_offset + i * this.avg_unit_width));\n\n\t\tif(!this.x_old_axis_positions) {\n\t\t\tthis.x_old_axis_positions = this.x_axis_positions.slice();\n\t\t}\n\t}\n\n\tsetup_y() {\n\t\tif(this.y_axis_values) {\n\t\t\tthis.y_old_axis_values =  this.y_axis_values.slice();\n\t\t}\n\n\t\tlet values = this.get_all_y_values();\n\n\t\tif(this.y_sums && this.y_sums.length > 0) {\n\t\t\tvalues = values.concat(this.y_sums);\n\t\t}\n\n\t\tthis.y_axis_values = this.get_y_axis_points(values);\n\n\t\tif(!this.y_old_axis_values) {\n\t\t\tthis.y_old_axis_values = this.y_axis_values.slice();\n\t\t}\n\n\t\tconst y_pts = this.y_axis_values;\n\t\tconst value_range = y_pts[y_pts.length-1] - y_pts[0];\n\n\t\tif(this.multiplier) this.old_multiplier = this.multiplier;\n\t\tthis.multiplier = this.height / value_range;\n\t\tif(!this.old_multiplier) this.old_multiplier = this.multiplier;\n\n\t\tconst zero_index = y_pts.indexOf(0);\n\t\tconst interval = y_pts[1] - y_pts[0];\n\t\tconst interval_height = interval * this.multiplier;\n\n\t\tif(this.zero_line) this.old_zero_line = this.zero_line;\n\t\tthis.zero_line = this.height - (zero_index * interval_height);\n\t\tif(!this.old_zero_line) this.old_zero_line = this.zero_line;\n\t}\n\n\tsetup_components() {\n\t\tsuper.setup_components();\n\t\tthis.setup_marker_components();\n\t\tthis.setup_aggregation_components();\n\t\tthis.setup_graph_components();\n\t}\n\n\tsetup_marker_components() {\n\t\tthis.y_axis_group = $.createSVG('g', {className: 'y axis', inside: this.draw_area});\n\t\tthis.x_axis_group = $.createSVG('g', {className: 'x axis', inside: this.draw_area});\n\t\tthis.specific_y_group = $.createSVG('g', {className: 'specific axis', inside: this.draw_area});\n\t}\n\n\tsetup_aggregation_components() {\n\t\tthis.sum_group = $.createSVG('g', {className: 'data-points', inside: this.draw_area});\n\t\tthis.average_group = $.createSVG('g', {className: 'chart-area', inside: this.draw_area});\n\t}\n\n\tsetup_graph_components() {\n\t\tthis.svg_units_groups = [];\n\t\tthis.y.map((d, i) => {\n\t\t\tthis.svg_units_groups[i] = $.createSVG('g', {\n\t\t\t\tclassName: 'data-points data-points-' + i,\n\t\t\t\tinside: this.draw_area\n\t\t\t});\n\t\t});\n\t}\n\n\tmake_graph_components(init=false) {\n\t\tthis.make_y_axis();\n\t\tthis.make_x_axis();\n\t\tthis.draw_graph(init);\n\t\tthis.make_y_specifics();\n\t}\n\n\t// make VERTICAL lines for x values\n\tmake_x_axis(animate=false) {\n\t\tlet start_at, height, text_start_at, axis_line_class = '';\n\t\tif(this.x_axis_mode === 'span') {\t\t// long spanning lines\n\t\t\tstart_at = -7;\n\t\t\theight = this.height + 15;\n\t\t\ttext_start_at = this.height + 25;\n\t\t} else if(this.x_axis_mode === 'tick'){\t// short label lines\n\t\t\tstart_at = this.height;\n\t\t\theight = 6;\n\t\t\ttext_start_at = 9;\n\t\t\taxis_line_class = 'x-axis-label';\n\t\t}\n\n\t\tthis.x_axis_group.setAttribute('transform', `translate(0,${start_at})`);\n\n\t\tif(animate) {\n\t\t\tthis.make_anim_x_axis(height, text_start_at, axis_line_class);\n\t\t\treturn;\n\t\t}\n\n\t\tlet allowed_space = this.avg_unit_width * 1.5;\n\t\tlet allowed_letters = allowed_space / 8;\n\n\t\tthis.x_axis_group.textContent = '';\n\t\tthis.x.map((point, i) => {\n\t\t\tlet space_taken = this.get_strwidth(point) + 2;\n\t\t\tif(space_taken > allowed_space) {\n\t\t\t\tif(this.is_series) {\n\t\t\t\t\t// Skip some axis lines if X axis is a series\n\t\t\t\t\tlet skips = 1;\n\t\t\t\t\twhile((space_taken/skips)*2 > allowed_space) {\n\t\t\t\t\t\tskips++;\n\t\t\t\t\t}\n\t\t\t\t\tif(i % skips !== 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpoint = point.slice(0, allowed_letters-3) + \" ...\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.x_axis_group.appendChild(\n\t\t\t\tthis.make_x_line(\n\t\t\t\t\theight,\n\t\t\t\t\ttext_start_at,\n\t\t\t\t\tpoint,\n\t\t\t\t\t'x-value-text',\n\t\t\t\t\taxis_line_class,\n\t\t\t\t\tthis.x_axis_positions[i]\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t}\n\n\t// make HORIZONTAL lines for y values\n\tmake_y_axis(animate=false) {\n\t\tif(animate) {\n\t\t\tthis.make_anim_y_axis();\n\t\t\tthis.make_anim_y_specifics();\n\t\t\treturn;\n\t\t}\n\n\t\tlet [width, text_end_at, axis_line_class, start_at] = this.get_y_axis_line_props();\n\n\t\tthis.y_axis_group.textContent = '';\n\t\tthis.y_axis_values.map((value, i) => {\n\t\t\tthis.y_axis_group.appendChild(\n\t\t\t\tthis.make_y_line(\n\t\t\t\t\tstart_at,\n\t\t\t\t\twidth,\n\t\t\t\t\ttext_end_at,\n\t\t\t\t\tvalue,\n\t\t\t\t\t'y-value-text',\n\t\t\t\t\taxis_line_class,\n\t\t\t\t\tthis.zero_line - value * this.multiplier,\n\t\t\t\t\t(value === 0 && i !== 0) // Non-first Zero line\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t}\n\n\tget_y_axis_line_props(specific=false) {\n\t\tif(specific) {\n\t\t\treturn[this.width, this.width + 5, 'specific-value', 0];\n\t\t}\n\t\tlet width, text_end_at = -9, axis_line_class = '', start_at = 0;\n\t\tif(this.y_axis_mode === 'span') {\t\t// long spanning lines\n\t\t\twidth = this.width + 6;\n\t\t\tstart_at = -6;\n\t\t} else if(this.y_axis_mode === 'tick'){\t// short label lines\n\t\t\twidth = -6;\n\t\t\taxis_line_class = 'y-axis-label';\n\t\t}\n\n\t\treturn [width, text_end_at, axis_line_class, start_at];\n\t}\n\n\tdraw_graph(init=false) {\n\t\tif(this.raw_chart_args.hasOwnProperty(\"init\") && !this.raw_chart_args.init) {\n\t\t\tthis.y.map((d, i) => {\n\t\t\t\td.svg_units = [];\n\t\t\t\tthis.make_path && this.make_path(d, i, this.x_axis_positions, d.y_tops, d.color || this.colors[i]);\n\t\t\t\tthis.make_new_units(d, i);\n\t\t\t\tthis.calc_y_dependencies();\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tif(init) {\n\t\t\tthis.draw_new_graph_and_animate();\n\t\t\treturn;\n\t\t}\n\t\tthis.y.map((d, i) => {\n\t\t\td.svg_units = [];\n\t\t\tthis.make_path && this.make_path(d, i, this.x_axis_positions, d.y_tops, d.color || this.colors[i]);\n\t\t\tthis.make_new_units(d, i);\n\t\t});\n\t}\n\n\tdraw_new_graph_and_animate() {\n\t\tlet data = [];\n\t\tthis.y.map((d, i) => {\n\t\t\t// Anim: Don't draw initial values, store them and update later\n\t\t\td.y_tops = new Array(d.values.length).fill(this.zero_line); // no value\n\t\t\tdata.push({values: d.values});\n\t\t\td.svg_units = [];\n\n\t\t\tthis.make_path && this.make_path(d, i, this.x_axis_positions, d.y_tops, d.color || this.colors[i]);\n\t\t\tthis.make_new_units(d, i);\n\t\t});\n\n\t\tsetTimeout(() => {\n\t\t\tthis.update_values(data);\n\t\t}, 350);\n\t}\n\n\tsetup_navigation(init) {\n\t\tif(init) {\n\t\t\t// Hack: defer nav till initial update_values\n\t\t\tsetTimeout(() => {\n\t\t\t\tsuper.setup_navigation(init);\n\t\t\t}, 500);\n\t\t} else {\n\t\t\tsuper.setup_navigation(init);\n\t\t}\n\t}\n\n\tmake_new_units(d, i) {\n\t\tthis.make_new_units_for_dataset(\n\t\t\tthis.x_axis_positions,\n\t\t\td.y_tops,\n\t\t\td.color || this.colors[i],\n\t\t\ti,\n\t\t\tthis.y.length\n\t\t);\n\t}\n\n\tmake_new_units_for_dataset(x_values, y_values, color, dataset_index,\n\t\tno_of_datasets, units_group, units_array, unit) {\n\n\t\tif(!units_group) units_group = this.svg_units_groups[dataset_index];\n\t\tif(!units_array) units_array = this.y[dataset_index].svg_units;\n\t\tif(!unit) unit = this.unit_args;\n\n\t\tunits_group.textContent = '';\n\t\tunits_array.length = 0;\n\n\t\ty_values.map((y, i) => {\n\t\t\tlet data_unit = this.draw[unit.type](\n\t\t\t\tx_values[i],\n\t\t\t\ty,\n\t\t\t\tunit.args,\n\t\t\t\tcolor,\n\t\t\t\ti,\n\t\t\t\tdataset_index,\n\t\t\t\tno_of_datasets\n\t\t\t);\n\t\t\tunits_group.appendChild(data_unit);\n\t\t\tunits_array.push(data_unit);\n\t\t});\n\n\t\tif(this.is_navigable) {\n\t\t\tthis.bind_units(units_array);\n\t\t}\n\t}\n\n\tmake_y_specifics() {\n\t\tthis.specific_y_group.textContent = '';\n\t\tthis.specific_values.map(d => {\n\t\t\tthis.specific_y_group.appendChild(\n\t\t\t\tthis.make_y_line(\n\t\t\t\t\t0,\n\t\t\t\t\tthis.width,\n\t\t\t\t\tthis.width + 5,\n\t\t\t\t\td.title.toUpperCase(),\n\t\t\t\t\t'specific-value',\n\t\t\t\t\t'specific-value',\n\t\t\t\t\tthis.zero_line - d.value * this.multiplier,\n\t\t\t\t\tfalse,\n\t\t\t\t\td.line_type\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t}\n\n\tbind_tooltip() {\n\t\t// TODO: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.chart_wrapper.addEventListener('mousemove', (e) => {\n\t\t\tlet offset = $.offset(this.chart_wrapper);\n\t\t\tlet relX = e.pageX - offset.left - this.translate_x;\n\t\t\tlet relY = e.pageY - offset.top - this.translate_y;\n\n\t\t\tif(relY < this.height + this.translate_y * 2) {\n\t\t\t\tthis.map_tooltip_x_position_and_show(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hide_tip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmap_tooltip_x_position_and_show(relX) {\n\t\tif(!this.y_min_tops) return;\n\t\tfor(var i=this.x_axis_positions.length - 1; i >= 0 ; i--) {\n\t\t\tlet x_val = this.x_axis_positions[i];\n\t\t\t// let delta = i === 0 ? this.avg_unit_width : x_val - this.x_axis_positions[i-1];\n\t\t\tif(relX > x_val - this.avg_unit_width/2) {\n\t\t\t\tlet x = x_val + this.translate_x;\n\t\t\t\tlet y = this.y_min_tops[i] + this.translate_y;\n\n\t\t\t\tlet title = this.x.formatted && this.x.formatted.length>0\n\t\t\t\t\t? this.x.formatted[i] : this.x[i];\n\t\t\t\tlet values = this.y.map((set, j) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: set.title,\n\t\t\t\t\t\tvalue: set.formatted ? set.formatted[i] : set.values[i],\n\t\t\t\t\t\tcolor: set.color || this.colors[j],\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\t// TODO: upside-down tooltips for negative values?\n\t\t\t\tthis.tip.set_values(x, y, title, '', values);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// API\n\tshow_sums() {\n\t\tthis.updating = true;\n\n\t\tthis.y_sums = new Array(this.x_axis_positions.length).fill(0);\n\t\tthis.y.map(d => {\n\t\t\td.values.map( (value, i) => {\n\t\t\t\tthis.y_sums[i] += value;\n\t\t\t});\n\t\t});\n\n\t\t// Remake y axis, animate\n\t\tthis.update_values();\n\n\t\t// Then make sum units, don't animate\n\t\tthis.sum_units = [];\n\n\t\tthis.make_new_units_for_dataset(\n\t\t\tthis.x_axis_positions,\n\t\t\tthis.y_sums.map( val => float_2(this.zero_line - val * this.multiplier)),\n\t\t\t'light-grey',\n\t\t\t0,\n\t\t\t1,\n\t\t\tthis.sum_group,\n\t\t\tthis.sum_units\n\t\t);\n\n\t\t// this.make_path && this.make_path(d, i, old_x, old_y, d.color || this.colors[i]);\n\n\t\tthis.updating = false;\n\t}\n\n\thide_sums() {\n\t\tif(this.updating) return;\n\t\tthis.y_sums = [];\n\t\tthis.sum_group.textContent = '';\n\t\tthis.sum_units = [];\n\t\tthis.update_values();\n\t}\n\n\tshow_averages() {\n\t\tthis.old_specific_values = this.specific_values.slice();\n\t\tthis.y.map((d, i) => {\n\t\t\tlet sum = 0;\n\t\t\td.values.map(e => {sum+=e;});\n\t\t\tlet average = sum/d.values.length;\n\n\t\t\tthis.specific_values.push({\n\t\t\t\ttitle: \"AVG\" + \" \" + (i+1),\n\t\t\t\tline_type: \"dashed\",\n\t\t\t\tvalue: average,\n\t\t\t\tauto: 1\n\t\t\t});\n\t\t});\n\n\t\tthis.update_values();\n\t}\n\n\thide_averages() {\n\t\tthis.old_specific_values = this.specific_values.slice();\n\n\t\tlet indices_to_remove = [];\n\t\tthis.specific_values.map((d, i) => {\n\t\t\tif(d.auto) indices_to_remove.unshift(i);\n\t\t});\n\n\t\tindices_to_remove.map(index => {\n\t\t\tthis.specific_values.splice(index, 1);\n\t\t});\n\n\t\tthis.update_values();\n\t}\n\n\tupdate_values(new_y, new_x) {\n\t\tif(!new_x) {\n\t\t\tnew_x = this.x;\n\t\t}\n\t\tthis.elements_to_animate = [];\n\t\tthis.updating = true;\n\n\t\tthis.old_x_values = this.x.slice();\n\t\tthis.old_y_axis_tops = this.y.map(d => d.y_tops.slice());\n\n\t\tthis.old_y_values = this.y.map(d => d.values);\n\n\t\tthis.no_of_extra_pts = new_x.length - this.x.length;\n\n\t\t// Just update values prop, setup_x/y() will do the rest\n\t\tif(new_y) this.y.map((d, i) => {d.values = new_y[i].values;});\n\t\tif(new_x) this.x = new_x;\n\n\t\tthis.setup_x();\n\t\tthis.setup_y();\n\n\t\t// Animate only if positions have changed\n\t\tif(!arrays_equal(this.x_old_axis_positions, this.x_axis_positions)) {\n\t\t\tthis.make_x_axis(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tif(!this.updating) this.make_x_axis();\n\t\t\t}, 350);\n\t\t}\n\n\t\tif(!arrays_equal(this.y_old_axis_values, this.y_axis_values) ||\n\t\t\t(this.old_specific_values &&\n\t\t\t!arrays_equal(this.old_specific_values, this.specific_values))) {\n\n\t\t\tthis.make_y_axis(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tif(!this.updating) {\n\t\t\t\t\tthis.make_y_axis();\n\t\t\t\t\tthis.make_y_specifics();\n\t\t\t\t}\n\t\t\t}, 350);\n\t\t}\n\n\t\t// Change in data, so calculate dependencies\n\t\tthis.calc_y_dependencies();\n\n\t\tthis.animate_graphs();\n\n\t\t// Trigger animation with the animatable elements in this.elements_to_animate\n\t\tthis.run_animation();\n\n\t\tthis.updating = false;\n\t}\n\n\tadd_data_point(y_point, x_point, index=this.x.length) {\n\t\tlet new_y = this.y.map(data_set => { return {values:data_set.values}; });\n\t\tnew_y.map((d, i) => { d.values.splice(index, 0, y_point[i]); });\n\t\tlet new_x = this.x.slice();\n\t\tnew_x.splice(index, 0, x_point);\n\n\t\tthis.update_values(new_y, new_x);\n\t}\n\n\tremove_data_point(index = this.x.length-1) {\n\t\tif(this.x.length < 3) return;\n\n\t\tlet new_y = this.y.map(data_set => { return {values:data_set.values}; });\n\t\tnew_y.map((d) => { d.values.splice(index, 1); });\n\t\tlet new_x = this.x.slice();\n\t\tnew_x.splice(index, 1);\n\n\t\tthis.update_values(new_y, new_x);\n\t}\n\n\trun_animation() {\n\t\tlet anim_svg = $.runSVGAnimation(this.svg, this.elements_to_animate);\n\n\t\tif(this.svg.parentNode == this.chart_wrapper) {\n\t\t\tthis.chart_wrapper.removeChild(this.svg);\n\t\t\tthis.chart_wrapper.appendChild(anim_svg);\n\n\t\t}\n\n\t\t// Replace the new svg (data has long been replaced)\n\t\tsetTimeout(() => {\n\t\t\tif(anim_svg.parentNode == this.chart_wrapper) {\n\t\t\t\tthis.chart_wrapper.removeChild(anim_svg);\n\t\t\t\tthis.chart_wrapper.appendChild(this.svg);\n\t\t\t}\n\t\t}, 250);\n\t}\n\n\tanimate_graphs() {\n\t\tthis.y.map((d, i) => {\n\t\t\t// Pre-prep, equilize no of positions between old and new\n\t\t\tlet [old_x, old_y, new_x, new_y] = this.calc_old_and_new_postions(d, i);\n\t\t\tif(this.no_of_extra_pts >= 0) {\n\t\t\t\tthis.make_path && this.make_path(d, i, old_x, old_y, d.color || this.colors[i]);\n\t\t\t\tthis.make_new_units_for_dataset(old_x, old_y, d.color || this.colors[i], i, this.y.length);\n\t\t\t}\n\t\t\td.path && this.animate_path(d, i, old_x, old_y, new_x, new_y);\n\t\t\tthis.animate_units(d, i, old_x, old_y, new_x, new_y);\n\t\t});\n\n\t\t// TODO: replace with real units\n\t\tsetTimeout(() => {\n\t\t\tthis.y.map((d, i) => {\n\t\t\t\tthis.make_path && this.make_path(d, i, this.x_axis_positions, d.y_tops, d.color || this.colors[i]);\n\t\t\t\tthis.make_new_units(d, i);\n\t\t\t});\n\t\t}, 400);\n\t}\n\n\tanimate_path(d, i, old_x, old_y, new_x, new_y) {\n\t\t// Animate path\n\t\tconst new_points_list = new_y.map((y, i) => (new_x[i] + ',' + y));\n\t\tconst new_path_str = new_points_list.join(\"L\");\n\n\t\tconst path_args = [{unit: d.path, object: d, key: 'path'}, {d:\"M\"+new_path_str}, 350, \"easein\"];\n\t\tthis.elements_to_animate.push(path_args);\n\n\t\t// Animate region\n\t\tif(d.region_path) {\n\t\t\tlet reg_start_pt = `0,${this.zero_line}L`;\n\t\t\tlet reg_end_pt = `L${this.width},${this.zero_line}`;\n\n\t\t\tconst region_args = [\n\t\t\t\t{unit: d.region_path, object: d, key: 'region_path'},\n\t\t\t\t{d:\"M\" + reg_start_pt + new_path_str + reg_end_pt},\n\t\t\t\t350,\n\t\t\t\t\"easein\"\n\t\t\t];\n\t\t\tthis.elements_to_animate.push(region_args);\n\t\t}\n\t}\n\n\tanimate_units(d, index, old_x, old_y, new_x, new_y) {\n\t\tlet type = this.unit_args.type;\n\n\t\td.svg_units.map((unit, i) => {\n\t\t\tif(new_x[i] === undefined || new_y[i] === undefined) return;\n\t\t\tthis.elements_to_animate.push(this.animate[type](\n\t\t\t\t{unit:unit, array:d.svg_units, index: i}, // unit, with info to replace where it came from in the data\n\t\t\t\tnew_x[i],\n\t\t\t\tnew_y[i],\n\t\t\t\tindex\n\t\t\t));\n\t\t});\n\t}\n\n\tcalc_old_and_new_postions(d, i) {\n\t\tlet old_x = this.x_old_axis_positions.slice();\n\t\tlet new_x = this.x_axis_positions.slice();\n\n\t\tlet old_y = this.old_y_axis_tops[i].slice();\n\t\tlet new_y = d.y_tops.slice();\n\n\t\tconst last_old_x_pos = old_x[old_x.length - 1];\n\t\tconst last_old_y_pos = old_y[old_y.length - 1];\n\n\t\tconst last_new_x_pos = new_x[new_x.length - 1];\n\t\tconst last_new_y_pos = new_y[new_y.length - 1];\n\n\t\tif(this.no_of_extra_pts >= 0) {\n\t\t\t// First substitute current path with a squiggled one (looking the same but\n\t\t\t// having more points at end),\n\t\t\t// then animate to stretch it later to new points\n\t\t\t// (new points already have more points)\n\n\t\t\t// Hence, the extra end points will correspond to current(old) positions\n\t\t\tlet filler_x = new Array(Math.abs(this.no_of_extra_pts)).fill(last_old_x_pos);\n\t\t\tlet filler_y = new Array(Math.abs(this.no_of_extra_pts)).fill(last_old_y_pos);\n\n\t\t\told_x = old_x.concat(filler_x);\n\t\t\told_y = old_y.concat(filler_y);\n\n\t\t} else {\n\t\t\t// Just modify the new points to have extra points\n\t\t\t// with the same position at end\n\t\t\tlet filler_x = new Array(Math.abs(this.no_of_extra_pts)).fill(last_new_x_pos);\n\t\t\tlet filler_y = new Array(Math.abs(this.no_of_extra_pts)).fill(last_new_y_pos);\n\n\t\t\tnew_x = new_x.concat(filler_x);\n\t\t\tnew_y = new_y.concat(filler_y);\n\t\t}\n\n\t\treturn [old_x, old_y, new_x, new_y];\n\t}\n\n\tmake_anim_x_axis(height, text_start_at, axis_line_class) {\n\t\t// Animate X AXIS to account for more or less axis lines\n\n\t\tconst old_pos = this.x_old_axis_positions;\n\t\tconst new_pos = this.x_axis_positions;\n\n\t\tconst old_vals = this.old_x_values;\n\t\tconst new_vals = this.x;\n\n\t\tconst last_line_pos = old_pos[old_pos.length - 1];\n\n\t\tlet add_and_animate_line = (value, old_pos, new_pos) => {\n\t\t\tif(typeof new_pos === 'string') {\n\t\t\t\tnew_pos = parseInt(new_pos.substring(0, new_pos.length-1));\n\t\t\t}\n\t\t\tconst x_line = this.make_x_line(\n\t\t\t\theight,\n\t\t\t\ttext_start_at,\n\t\t\t\tvalue, // new value\n\t\t\t\t'x-value-text',\n\t\t\t\taxis_line_class,\n\t\t\t\told_pos // old position\n\t\t\t);\n\t\t\tthis.x_axis_group.appendChild(x_line);\n\n\t\t\tthis.elements_to_animate && this.elements_to_animate.push([\n\t\t\t\t{unit: x_line, array: [0], index: 0},\n\t\t\t\t{transform: `${ new_pos }, 0`},\n\t\t\t\t350,\n\t\t\t\t\"easein\",\n\t\t\t\t\"translate\",\n\t\t\t\t{transform: `${ old_pos }, 0`}\n\t\t\t]);\n\t\t};\n\n\t\tthis.x_axis_group.textContent = '';\n\n\t\tthis.make_new_axis_anim_lines(\n\t\t\told_pos,\n\t\t\tnew_pos,\n\t\t\told_vals,\n\t\t\tnew_vals,\n\t\t\tlast_line_pos,\n\t\t\tadd_and_animate_line\n\t\t);\n\t}\n\n\tmake_anim_y_axis() {\n\t\t// Animate Y AXIS to account for more or less axis lines\n\n\t\tconst old_pos = this.y_old_axis_values.map(value =>\n\t\t\tthis.zero_line - value * this.multiplier);\n\t\tconst new_pos = this.y_axis_values.map(value =>\n\t\t\tthis.zero_line - value * this.multiplier);\n\n\t\tconst old_vals = this.y_old_axis_values;\n\t\tconst new_vals = this.y_axis_values;\n\n\t\tconst last_line_pos = old_pos[old_pos.length - 1];\n\n\t\tthis.y_axis_group.textContent = '';\n\n\t\tthis.make_new_axis_anim_lines(\n\t\t\told_pos,\n\t\t\tnew_pos,\n\t\t\told_vals,\n\t\t\tnew_vals,\n\t\t\tlast_line_pos,\n\t\t\tthis.add_and_animate_y_line.bind(this),\n\t\t\tthis.y_axis_group\n\t\t);\n\t}\n\n\tmake_anim_y_specifics() {\n\t\tthis.specific_y_group.textContent = '';\n\t\tthis.specific_values.map((d) => {\n\t\t\tthis.add_and_animate_y_line(\n\t\t\t\td.title,\n\t\t\t\tthis.old_zero_line - d.value * this.old_multiplier,\n\t\t\t\tthis.zero_line - d.value * this.multiplier,\n\t\t\t\t0,\n\t\t\t\tthis.specific_y_group,\n\t\t\t\td.line_type,\n\t\t\t\ttrue\n\t\t\t);\n\t\t});\n\t}\n\n\tmake_new_axis_anim_lines(old_pos, new_pos, old_vals, new_vals, last_line_pos, add_and_animate_line, group) {\n\t\tlet superimposed_positions, superimposed_values;\n\t\tlet no_of_extras = new_vals.length - old_vals.length;\n\t\tif(no_of_extras > 0) {\n\t\t\t// More axis are needed\n\t\t\t// First make only the superimposed (same position) ones\n\t\t\t// Add in the extras at the end later\n\t\t\tsuperimposed_positions = new_pos.slice(0, old_pos.length);\n\t\t\tsuperimposed_values = new_vals.slice(0, old_vals.length);\n\t\t} else {\n\t\t\t// Axis have to be reduced\n\t\t\t// Fake it by moving all current extra axis to the last position\n\t\t\t// You'll need filler positions and values in the new arrays\n\t\t\tconst filler_vals = new Array(Math.abs(no_of_extras)).fill(\"\");\n\t\t\tsuperimposed_values = new_vals.concat(filler_vals);\n\n\t\t\tconst filler_pos = new Array(Math.abs(no_of_extras)).fill(last_line_pos + \"F\");\n\t\t\tsuperimposed_positions = new_pos.concat(filler_pos);\n\t\t}\n\n\t\tsuperimposed_values.map((value, i) => {\n\t\t\tadd_and_animate_line(value, old_pos[i], superimposed_positions[i], i, group);\n\t\t});\n\n\t\tif(no_of_extras > 0) {\n\t\t\t// Add in extra axis in the end\n\t\t\t// and then animate to new positions\n\t\t\tconst extra_values = new_vals.slice(old_vals.length);\n\t\t\tconst extra_positions = new_pos.slice(old_pos.length);\n\n\t\t\textra_values.map((value, i) => {\n\t\t\t\tadd_and_animate_line(value, last_line_pos, extra_positions[i], i, group);\n\t\t\t});\n\t\t}\n\t}\n\n\tmake_x_line(height, text_start_at, point, label_class, axis_line_class, x_pos) {\n\t\tlet line = $.createSVG('line', {\n\t\t\tx1: 0,\n\t\t\tx2: 0,\n\t\t\ty1: 0,\n\t\t\ty2: height\n\t\t});\n\n\t\tlet text = $.createSVG('text', {\n\t\t\tclassName: label_class,\n\t\t\tx: 0,\n\t\t\ty: text_start_at,\n\t\t\tdy: '.71em',\n\t\t\tinnerHTML: point\n\t\t});\n\n\t\tlet x_level = $.createSVG('g', {\n\t\t\tclassName: `tick ${axis_line_class}`,\n\t\t\ttransform: `translate(${ x_pos }, 0)`\n\t\t});\n\n\t\tx_level.appendChild(line);\n\t\tx_level.appendChild(text);\n\n\t\treturn x_level;\n\t}\n\n\tmake_y_line(start_at, width, text_end_at, point, label_class, axis_line_class, y_pos, darker=false, line_type=\"\") {\n\t\tlet line = $.createSVG('line', {\n\t\t\tclassName: line_type === \"dashed\" ? \"dashed\": \"\",\n\t\t\tx1: start_at,\n\t\t\tx2: width,\n\t\t\ty1: 0,\n\t\t\ty2: 0\n\t\t});\n\n\t\tlet text = $.createSVG('text', {\n\t\t\tclassName: label_class,\n\t\t\tx: text_end_at,\n\t\t\ty: 0,\n\t\t\tdy: '.32em',\n\t\t\tinnerHTML: point+\"\"\n\t\t});\n\n\t\tlet y_level = $.createSVG('g', {\n\t\t\tclassName: `tick ${axis_line_class}`,\n\t\t\ttransform: `translate(0, ${y_pos})`,\n\t\t\t'stroke-opacity': 1\n\t\t});\n\n\t\tif(darker) {\n\t\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t\t}\n\n\t\ty_level.appendChild(line);\n\t\ty_level.appendChild(text);\n\n\t\treturn y_level;\n\t}\n\n\tadd_and_animate_y_line(value, old_pos, new_pos, i, group, type, specific=false) {\n\t\tlet filler = false;\n\t\tif(typeof new_pos === 'string') {\n\t\t\tnew_pos = parseInt(new_pos.substring(0, new_pos.length-1));\n\t\t\tfiller = true;\n\t\t}\n\t\tlet new_props = {transform: `0, ${ new_pos }`};\n\t\tlet old_props = {transform: `0, ${ old_pos }`};\n\n\t\tif(filler) {\n\t\t\tnew_props['stroke-opacity'] = 0;\n\t\t\t// old_props['stroke-opacity'] = 1;\n\t\t}\n\n\t\tlet [width, text_end_at, axis_line_class, start_at] = this.get_y_axis_line_props(specific);\n\t\tlet axis_label_class = !specific ? 'y-value-text' : 'specific-value';\n\t\tvalue = !specific ? value : (value+\"\").toUpperCase();\n\t\tconst y_line = this.make_y_line(\n\t\t\tstart_at,\n\t\t\twidth,\n\t\t\ttext_end_at,\n\t\t\tvalue,\n\t\t\taxis_label_class,\n\t\t\taxis_line_class,\n\t\t\told_pos,  // old position\n\t\t\t(value === 0 && i !== 0), // Non-first Zero line\n\t\t\ttype\n\t\t);\n\n\t\tgroup.appendChild(y_line);\n\n\t\tthis.elements_to_animate && this.elements_to_animate.push([\n\t\t\t{unit: y_line, array: [0], index: 0},\n\t\t\tnew_props,\n\t\t\t350,\n\t\t\t\"easein\",\n\t\t\t\"translate\",\n\t\t\told_props\n\t\t]);\n\t}\n\n\tget_y_axis_points(array) {\n\t\t//*** Where the magic happens ***\n\n\t\t// Calculates best-fit y intervals from given values\n\t\t// and returns the interval array\n\n\t\t// TODO: Fractions\n\n\t\tlet max_bound, min_bound, pos_no_of_parts, neg_no_of_parts, part_size; // eslint-disable-line no-unused-vars\n\n\t\t// Critical values\n\t\tlet max_val = parseInt(Math.max(...array));\n\t\tlet min_val = parseInt(Math.min(...array));\n\t\tif(min_val >= 0) {\n\t\t\tmin_val = 0;\n\t\t}\n\n\t\tlet get_params = (value1, value2) => {\n\t\t\tlet bound1, bound2, no_of_parts_1, no_of_parts_2, interval_size;\n\t\t\tif((value1+\"\").length <= 1) {\n\t\t\t\t[bound1, no_of_parts_1] = [10, 5];\n\t\t\t} else {\n\t\t\t\t[bound1, no_of_parts_1] = this.calc_upper_bound_and_no_of_parts(value1);\n\t\t\t}\n\n\t\t\tinterval_size = bound1 / no_of_parts_1;\n\t\t\tno_of_parts_2 = this.calc_no_of_parts(value2, interval_size);\n\t\t\tbound2 = no_of_parts_2 * interval_size;\n\n\t\t\treturn [bound1, bound2, no_of_parts_1, no_of_parts_2, interval_size];\n\t\t};\n\n\t\tconst abs_min_val = min_val * -1;\n\t\tif(abs_min_val <= max_val) {\n\t\t\t// Get the positive region intervals\n\t\t\t// then calc negative ones accordingly\n\t\t\t[max_bound, min_bound, pos_no_of_parts, neg_no_of_parts, part_size]\n\t\t\t\t= get_params(max_val, abs_min_val);\n\t\t\tif(abs_min_val === 0) {\n\t\t\t\tmin_bound = 0; neg_no_of_parts = 0;\n\t\t\t}\n\t\t} else {\n\t\t\t// Get the negative region here first\n\t\t\t[min_bound, max_bound, neg_no_of_parts, pos_no_of_parts, part_size]\n\t\t\t\t= get_params(abs_min_val, max_val);\n\t\t}\n\n\t\t// Make both region parts even\n\t\tif(pos_no_of_parts % 2 !== 0 && neg_no_of_parts > 0) pos_no_of_parts++;\n\t\tif(neg_no_of_parts % 2 !== 0) {\n\t\t\t// every increase in no_of_parts entails an increase in corresponding bound\n\t\t\t// except here, it happens implicitly after every calc_no_of_parts() call\n\t\t\tneg_no_of_parts++;\n\t\t\tmin_bound += part_size;\n\t\t}\n\n\t\tlet no_of_parts = pos_no_of_parts + neg_no_of_parts;\n\t\tif(no_of_parts > 5) {\n\t\t\tno_of_parts /= 2;\n\t\t\tpart_size *= 2;\n\n\t\t\tpos_no_of_parts /=2;\n\t\t}\n\n\t\tif (max_val < (pos_no_of_parts - 1) * part_size) {\n\t\t\tno_of_parts--;\n\t\t}\n\n\t\treturn this.get_intervals(\n\t\t\t(-1) * min_bound,\n\t\t\tpart_size,\n\t\t\tno_of_parts\n\t\t);\n\t}\n\n\tget_intervals(start, interval_size, count) {\n\t\tlet intervals = [];\n\t\tfor(var i = 0; i <= count; i++){\n\t\t\tintervals.push(start);\n\t\t\tstart += interval_size;\n\t\t}\n\t\treturn intervals;\n\t}\n\n\tcalc_upper_bound_and_no_of_parts(max_val) {\n\t\t// Given a positive value, calculates a nice-number upper bound\n\t\t// and a consequent optimal number of parts\n\n\t\tconst part_size = Math.pow(10, ((max_val+\"\").length - 1));\n\t\tconst no_of_parts = this.calc_no_of_parts(max_val, part_size);\n\n\t\t// Use it to get a nice even upper bound\n\t\tconst upper_bound = part_size * no_of_parts;\n\n\t\treturn [upper_bound, no_of_parts];\n\t}\n\n\tcalc_no_of_parts(value, divisor) {\n\t\t// value should be a positive number, divisor should be greater than 0\n\t\t// returns an even no of parts\n\t\tlet no_of_parts = Math.ceil(value / divisor);\n\t\tif(no_of_parts % 2 !== 0) no_of_parts++; // Make it an even number\n\n\t\treturn no_of_parts;\n\t}\n\n\tget_optimal_no_of_parts(no_of_parts) {\n\t\t// aka Divide by 2 if too large\n\t\treturn (no_of_parts < 5) ? no_of_parts : no_of_parts / 2;\n\t}\n\n\tset_avg_unit_width_and_x_offset() {\n\t\t// Set the ... you get it\n\t\tthis.avg_unit_width = this.width/(this.x.length - 1);\n\t\tthis.x_offset = 0;\n\t}\n\n\tget_all_y_values() {\n\t\tlet all_values = [];\n\n\t\t// Add in all the y values in the datasets\n\t\tthis.y.map(d => {\n\t\t\tall_values = all_values.concat(d.values);\n\t\t});\n\n\t\t// Add in all the specific values\n\t\treturn all_values.concat(this.specific_values.map(d => d.value));\n\t}\n\n\tcalc_y_dependencies() {\n\t\tthis.y_min_tops = new Array(this.x_axis_positions.length).fill(9999);\n\t\tthis.y.map(d => {\n\t\t\td.y_tops = d.values.map( val => float_2(this.zero_line - val * this.multiplier));\n\t\t\td.y_tops.map( (y_top, i) => {\n\t\t\t\tif(y_top < this.y_min_tops[i]) {\n\t\t\t\t\tthis.y_min_tops[i] = y_top;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\t// this.chart_wrapper.removeChild(this.tip.container);\n\t\t// this.make_tooltip();\n\t}\n\n\tget_bar_height_and_y_attr(y_top) {\n\t\tlet height, y;\n\t\tif (y_top <= this.zero_line) {\n\t\t\theight = this.zero_line - y_top;\n\t\t\ty = y_top;\n\n\t\t\t// In case of invisible bars\n\t\t\tif(height === 0) {\n\t\t\t\theight = this.height * 0.01;\n\t\t\t\ty -= height;\n\t\t\t}\n\t\t} else {\n\t\t\theight = y_top - this.zero_line;\n\t\t\ty = this.zero_line;\n\n\t\t\t// In case of invisible bars\n\t\t\tif(height === 0) {\n\t\t\t\theight = this.height * 0.01;\n\t\t\t}\n\t\t}\n\n\t\treturn [height, y];\n\t}\n\n\tsetup_utils() {\n\t\tthis.draw = {\n\t\t\t'bar': (x, y_top, args, color, index, dataset_index, no_of_datasets) => {\n\t\t\t\tlet total_width = this.avg_unit_width - args.space_width;\n\t\t\t\tlet start_x = x - total_width/2;\n\n\t\t\t\tlet width = total_width / no_of_datasets;\n\t\t\t\tlet current_x = start_x + width * dataset_index;\n\n\t\t\t\tlet [height, y] = this.get_bar_height_and_y_attr(y_top);\n\n\t\t\t\treturn $.createSVG('rect', {\n\t\t\t\t\tclassName: `bar mini fill ${color}`,\n\t\t\t\t\t'data-point-index': index,\n\t\t\t\t\tx: current_x,\n\t\t\t\t\ty: y,\n\t\t\t\t\twidth: width,\n\t\t\t\t\theight: height\n\t\t\t\t});\n\n\t\t\t},\n\t\t\t'dot': (x, y, args, color, index) => {\n\t\t\t\treturn $.createSVG('circle', {\n\t\t\t\t\tclassName: `fill ${color}`,\n\t\t\t\t\t'data-point-index': index,\n\t\t\t\t\tcx: x,\n\t\t\t\t\tcy: y,\n\t\t\t\t\tr: args.radius\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tthis.animate = {\n\t\t\t'bar': (bar_obj, x, y_top, index) => {\n\t\t\t\tlet start = x - this.avg_unit_width/4;\n\t\t\t\tlet width = (this.avg_unit_width/2)/this.y.length;\n\t\t\t\tlet [height, y] = this.get_bar_height_and_y_attr(y_top);\n\n\t\t\t\tx = start + (width * index);\n\n\t\t\t\treturn [bar_obj, {width: width, height: height, x: x, y: y}, 350, \"easein\"];\n\t\t\t\t// bar.animate({height: args.new_height, y: y_top}, 350, mina.easein);\n\t\t\t},\n\t\t\t'dot': (dot_obj, x, y_top) => {\n\t\t\t\treturn [dot_obj, {cx: x, cy: y_top}, 350, \"easein\"];\n\t\t\t\t// dot.animate({cy: y_top}, 350, mina.easein);\n\t\t\t}\n\t\t};\n\t}\n}\n","import AxisChart from './AxisChart';\n\nexport default class BarChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.type = 'bar';\n\t\tthis.x_axis_mode = args.x_axis_mode || 'tick';\n\t\tthis.y_axis_mode = args.y_axis_mode || 'span';\n\t\tthis.setup();\n\t}\n\n\tsetup_values() {\n\t\tsuper.setup_values();\n\t\tthis.x_offset = this.avg_unit_width;\n\t\tthis.unit_args = {\n\t\t\ttype: 'bar',\n\t\t\targs: {\n\t\t\t\tspace_width: this.avg_unit_width/2,\n\t\t\t}\n\t\t};\n\t}\n\n\tmake_overlay() {\n\t\t// Just make one out of the first element\n\t\tlet index = this.x.length - 1;\n\t\tlet unit = this.y[0].svg_units[index];\n\t\tthis.update_current_data_point(index);\n\n\t\tif(this.overlay) {\n\t\t\tthis.overlay.parentNode.removeChild(this.overlay);\n\t\t}\n\n\t\tthis.overlay = unit.cloneNode();\n\t\tthis.overlay.style.fill = '#000000';\n\t\tthis.overlay.style.opacity = '0.4';\n\t\tthis.draw_area.appendChild(this.overlay);\n\t}\n\n\tbind_overlay() {\n\t\t// on event, update overlay\n\t\tthis.parent.addEventListener('data-select', (e) => {\n\t\t\tthis.update_overlay(e.svg_unit);\n\t\t});\n\t}\n\n\tbind_units(units_array) {\n\t\tunits_array.map(unit => {\n\t\t\tunit.addEventListener('click', () => {\n\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\tthis.update_current_data_point(index);\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate_overlay(unit) {\n\t\tlet attributes = [];\n\t\tObject.keys(unit.attributes).map(index => {\n\t\t\tattributes.push(unit.attributes[index]);\n\t\t});\n\n\t\tattributes.filter(attr => attr.specified).map(attr => {\n\t\t\tthis.overlay.setAttribute(attr.name, attr.nodeValue);\n\t\t});\n\t}\n\n\ton_left_arrow() {\n\t\tthis.update_current_data_point(this.current_index - 1);\n\t}\n\n\ton_right_arrow() {\n\t\tthis.update_current_data_point(this.current_index + 1);\n\t}\n\n\tset_avg_unit_width_and_x_offset() {\n\t\tthis.avg_unit_width = this.width/(this.x.length + 1);\n\t\tthis.x_offset = this.avg_unit_width;\n\t}\n}\n","import AxisChart from './AxisChart';\nimport $ from '../helpers/dom';\n\nexport default class LineChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.x_axis_mode = args.x_axis_mode || 'span';\n\t\tthis.y_axis_mode = args.y_axis_mode || 'span';\n\n\t\tif(args.hasOwnProperty('show_dots')) {\n\t\t\tthis.show_dots = args.show_dots;\n\t\t} else {\n\t\t\tthis.show_dots = 1;\n\t\t}\n\t\tthis.region_fill = args.region_fill;\n\n\t\tif(Object.getPrototypeOf(this) !== LineChart.prototype) {\n\t\t\treturn;\n\t\t}\n\t\tthis.dot_radius = args.dot_radius || 4;\n\t\tthis.heatline = args.heatline;\n\t\tthis.type = 'line';\n\n\t\tthis.setup();\n\t}\n\n\tsetup_graph_components() {\n\t\tthis.setup_path_groups();\n\t\tsuper.setup_graph_components();\n\t}\n\n\tsetup_path_groups() {\n\t\tthis.paths_groups = [];\n\t\tthis.y.map((d, i) => {\n\t\t\tthis.paths_groups[i] = $.createSVG('g', {\n\t\t\t\tclassName: 'path-group path-group-' + i,\n\t\t\t\tinside: this.draw_area\n\t\t\t});\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tsuper.setup_values();\n\t\tthis.unit_args = {\n\t\t\ttype: 'dot',\n\t\t\targs: { radius: this.dot_radius }\n\t\t};\n\t}\n\n\tmake_new_units_for_dataset(x_values, y_values, color, dataset_index,\n\t\tno_of_datasets, units_group, units_array, unit) {\n\t\tif(this.show_dots) {\n\t\t\tsuper.make_new_units_for_dataset(x_values, y_values, color, dataset_index,\n\t\t\t\tno_of_datasets, units_group, units_array, unit);\n\t\t}\n\t}\n\n\tmake_paths() {\n\t\tthis.y.map((d, i) => {\n\t\t\tthis.make_path(d, i, this.x_axis_positions, d.y_tops, d.color || this.colors[i]);\n\t\t});\n\t}\n\n\tmake_path(d, i, x_positions, y_positions, color) {\n\t\tlet points_list = y_positions.map((y, i) => (x_positions[i] + ',' + y));\n\t\tlet points_str = points_list.join(\"L\");\n\n\t\tthis.paths_groups[i].textContent = '';\n\n\t\td.path = $.createSVG('path', {\n\t\t\tinside: this.paths_groups[i],\n\t\t\tclassName: `stroke ${color}`,\n\t\t\td: \"M\"+points_str\n\t\t});\n\n\t\tif(this.heatline) {\n\t\t\tlet gradient_id = this.make_gradient(color);\n\t\t\td.path.style.stroke = `url(#${gradient_id})`;\n\t\t}\n\n\t\tif(this.region_fill) {\n\t\t\tthis.fill_region_for_dataset(d, i, color, points_str);\n\t\t}\n\t}\n\n\tfill_region_for_dataset(d, i, color, points_str) {\n\t\tlet gradient_id = this.make_gradient(color, true);\n\n\t\td.region_path = $.createSVG('path', {\n\t\t\tinside: this.paths_groups[i],\n\t\t\tclassName: `region-fill`,\n\t\t\td: \"M\" + `0,${this.zero_line}L` + points_str + `L${this.width},${this.zero_line}`,\n\t\t});\n\n\t\td.region_path.style.stroke = \"none\";\n\t\td.region_path.style.fill = `url(#${gradient_id})`;\n\t}\n\n\tmake_gradient(color, lighter = false) {\n\t\tlet gradient_id ='path-fill-gradient' + '-' + color;\n\n\t\tlet gradient_def = $.createSVG('linearGradient', {\n\t\t\tinside: this.svg_defs,\n\t\t\tid: gradient_id,\n\t\t\tx1: 0,\n\t\t\tx2: 0,\n\t\t\ty1: 0,\n\t\t\ty2: 1\n\t\t});\n\n\t\tlet set_gradient_stop = (grad_elem, offset, color, opacity) => {\n\t\t\t$.createSVG('stop', {\n\t\t\t\t'className': 'stop-color ' + color,\n\t\t\t\t'inside': grad_elem,\n\t\t\t\t'offset': offset,\n\t\t\t\t'stop-opacity': opacity\n\t\t\t});\n\t\t};\n\n\t\tlet opacities = [1, 0.6, 0.2];\n\n\t\tif(lighter) {\n\t\t\topacities = [0.4, 0.2, 0];\n\t\t}\n\n\t\tset_gradient_stop(gradient_def, \"0%\", color, opacities[0]);\n\t\tset_gradient_stop(gradient_def, \"50%\", color, opacities[1]);\n\t\tset_gradient_stop(gradient_def, \"100%\", color, opacities[2]);\n\n\t\treturn gradient_id;\n\t}\n}\n","import LineChart from './LineChart';\n\nexport default class ScatterChart extends LineChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.type = 'scatter';\n\n\t\tif(!args.dot_radius) {\n\t\t\tthis.dot_radius = 8;\n\t\t} else {\n\t\t\tthis.dot_radius = args.dot_radius;\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\tsetup_graph_components() {\n\t\tthis.setup_path_groups();\n\t\tsuper.setup_graph_components();\n\t}\n\n\tsetup_path_groups() {}\n\n\tsetup_values() {\n\t\tsuper.setup_values();\n\t\tthis.unit_args = {\n\t\t\ttype: 'dot',\n\t\t\targs: { radius: this.dot_radius }\n\t\t};\n\t}\n\n\tmake_paths() {}\n\tmake_path() {}\n}\n","import BaseChart from './BaseChart';\nimport $ from '../helpers/dom';\n\nexport default class PercentageChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'percentage';\n\n\t\tthis.get_y_label = this.format_lambdas.y_label;\n\t\tthis.get_x_tooltip = this.format_lambdas.x_tooltip;\n\t\tthis.get_y_tooltip = this.format_lambdas.y_tooltip;\n\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\n\t\tthis.colors = args.colors;\n\n\t\tif(!this.colors || this.colors.length < this.data.labels.length) {\n\t\t\tthis.colors = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t\t\t\t'yellow', 'green', 'light-green', 'purple', 'magenta'];\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\tmake_chart_area() {\n\t\tthis.chart_wrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.chart_wrapper.style.marginTop = '45px';\n\n\t\tthis.stats_wrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.stats_wrapper.style.marginBottom = '30px';\n\t\tthis.stats_wrapper.style.paddingTop = '0px';\n\t}\n\n\tmake_draw_area() {\n\t\tthis.chart_div = $.create('div', {\n\t\t\tclassName: 'div',\n\t\t\tinside: this.chart_wrapper\n\t\t});\n\n\t\tthis.chart = $.create('div', {\n\t\t\tclassName: 'progress-chart',\n\t\t\tinside: this.chart_div\n\t\t});\n\t}\n\n\tsetup_components() {\n\t\tthis.percentage_bar = $.create('div', {\n\t\t\tclassName: 'progress',\n\t\t\tinside: this.chart\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\tsetup_utils() { }\n\n\tmake_graph_components() {\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tthis.slices = [];\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tlet slice = $.create('div', {\n\t\t\t\tclassName: `progress-bar background ${this.colors[i]}`,\n\t\t\t\tinside: this.percentage_bar,\n\t\t\t\tstyles: {\n\t\t\t\t\twidth: total*100/this.grand_total + \"%\"\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.slices.push(slice);\n\t\t});\n\t}\n\n\tbind_tooltip() {\n\t\tthis.slices.map((slice, i) => {\n\t\t\tslice.addEventListener('mouseenter', () => {\n\t\t\t\tlet g_off = $.offset(this.chart_wrapper), p_off = $.offset(slice);\n\n\t\t\t\tlet x = p_off.left - g_off.left + slice.offsetWidth/2;\n\t\t\t\tlet y = p_off.top - g_off.top - 6;\n\t\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\n\t\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\tshow_summary() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.stats_wrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator ${this.colors[i]}\">\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport $ from '../helpers/dom';\nimport { lightenDarkenColor } from '../helpers/utils';\nconst ANGLE_RATIO = Math.PI / 180;\nconst FULL_ANGLE = 360;\n\nexport default class PieChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'pie';\n\t\tthis.get_y_label = this.format_lambdas.y_label;\n\t\tthis.get_x_tooltip = this.format_lambdas.x_tooltip;\n\t\tthis.get_y_tooltip = this.format_lambdas.y_tooltip;\n\t\tthis.elements_to_animate = null;\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\t\tthis.isAnimate = false;\n\t\tthis.colors = args.colors;\n\t\tthis.startAngle = args.startAngle || 0;\n\t\tthis.clockWise = args.clockWise || false;\n\t\tif(!this.colors || this.colors.length < this.data.labels.length) {\n\t\t\tthis.colors = ['#7cd6fd', '#5e64ff', '#743ee2', '#ff5858', '#ffa00a',\n\t\t\t\t'#FEEF72', '#28a745', '#98d85b', '#b554ff', '#ffa3ef'];\n\t\t}\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\t\tthis.setup();\n\t}\n\tsetup_values() {\n\t\tthis.centerX = this.width / 2;\n\t\tthis.centerY = this.height / 2;\n\t\tthis.radius = (this.height > this.width ? this.centerX : this.centerY);\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\tsetup_utils() { }\n\tstatic getPositionByAngle(angle,radius){\n\t\treturn {\n\t\t\tx:Math.sin(angle * ANGLE_RATIO) * radius,\n\t\t\ty:Math.cos(angle * ANGLE_RATIO) * radius,\n\t\t};\n\t}\n\tmakeArcPath(startPosition,endPosition){\n\t\tconst{centerX,centerY,radius,clockWise} = this;\n\t\treturn `M${centerX} ${centerY} L${centerX+startPosition.x} ${centerY+startPosition.y} A ${radius} ${radius} 0 0 ${clockWise ? 1 : 0} ${centerX+endPosition.x} ${centerY+endPosition.y} z`;\n\t}\n\tmake_graph_components(init){\n\t\tconst{radius,clockWise} = this;\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tconst prevSlicesProperties = this.slicesProperties || [];\n\t\tthis.slices = [];\n\t\tthis.elements_to_animate = [];\n\t\tthis.slicesProperties = [];\n\t\tlet curAngle = 180 - this.startAngle;\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / this.grand_total) * FULL_ANGLE;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = PieChart.getPositionByAngle(startAngle,radius);\n\t\t\tconst endPosition = PieChart.getPositionByAngle(endAngle,radius);\n\t\t\tconst prevProperty = init && prevSlicesProperties[i];\n\t\t\tlet curStart,curEnd;\n\t\t\tif(init){\n\t\t\t\tcurStart = prevProperty?prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty? prevProperty.endPosition : startPosition;\n\t\t\t}else{\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath = this.makeArcPath(curStart,curEnd);\n\t\t\tlet slice = $.createSVG('path',{\n\t\t\t\tinside:this.draw_area,\n\t\t\t\tclassName:'pie-path',\n\t\t\t\tstyle:'transition:transform .3s;',\n\t\t\t\td:curPath,\n\t\t\t\tfill:this.colors[i]\n\t\t\t});\n\t\t\tthis.slices.push(slice);\n\t\t\tthis.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue:total,\n\t\t\t\ttotal:this.grand_total,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle:diffAngle\n\t\t\t});\n\t\t\tif(init){\n\t\t\t\tthis.elements_to_animate.push([{unit: slice, array: this.slices, index: this.slices.length - 1},\n\t\t\t\t\t{d:this.makeArcPath(startPosition,endPosition)},\n\t\t\t\t\t650, \"easein\",null,{\n\t\t\t\t\t\td:curPath\n\t\t\t\t\t}]);\n\t\t\t}\n\n\t\t});\n\t\tif(init){\n\t\t\tthis.run_animation();\n\t\t}\n\t}\n\trun_animation() {\n\t\t// if(this.isAnimate) return ;\n\t\t// this.isAnimate = true;\n\t\tif(!this.elements_to_animate || this.elements_to_animate.length === 0) return;\n\t\tlet anim_svg = $.runSVGAnimation(this.svg, this.elements_to_animate);\n\n\t\tif(this.svg.parentNode == this.chart_wrapper) {\n\t\t\tthis.chart_wrapper.removeChild(this.svg);\n\t\t\tthis.chart_wrapper.appendChild(anim_svg);\n\n\t\t}\n\n\t\t// Replace the new svg (data has long been replaced)\n\t\tsetTimeout(() => {\n\t\t\t// this.isAnimate = false;\n\t\t\tif(anim_svg.parentNode == this.chart_wrapper) {\n\t\t\t\tthis.chart_wrapper.removeChild(anim_svg);\n\t\t\t\tthis.chart_wrapper.appendChild(this.svg);\n\t\t\t}\n\t\t}, 650);\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = PieChart.getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tif(flag){\n\t\t\t$.transform(path,this.calTranslateByAngle(this.slicesProperties[i]));\n\t\t\tpath.setAttribute('fill',lightenDarkenColor(this.colors[i],50));\n\t\t\tlet g_off = $.offset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\tthis.tip.show_tip();\n\t\t}else{\n\t\t\t$.transform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hide_tip();\n\t\t\tpath.setAttribute('fill',this.colors[i]);\n\t\t}\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tfor(let i = 0; i < this.slices.length; i++){\n\t\t\tif(target === this.slices[i]){\n\t\t\t\tthis.hoverSlice(prevAcitve,prevIndex,false);\n\t\t\t\tthis.curActiveSlice = target;\n\t\t\t\tthis.curActiveSliceIndex = i;\n\t\t\t\tthis.hoverSlice(target,i,true,e);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n\tbind_tooltip() {\n\t\tthis.draw_area.addEventListener('mousemove',this.mouseMove);\n\t\tthis.draw_area.addEventListener('mouseleave',this.mouseLeave);\n\t}\n\n\tshow_summary() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.stats_wrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background-color:${this.colors[i]};\"></i>\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport $ from '../helpers/dom';\n\nexport default class Heatmap extends BaseChart {\n\tconstructor({\n\t\tstart = '',\n\t\tdomain = '',\n\t\tsubdomain = '',\n\t\tdata = {},\n\t\tdiscrete_domains = 0,\n\t\tcount_label = ''\n\t}) {\n\t\tsuper(arguments[0]);\n\n\t\tthis.type = 'heatmap';\n\n\t\tthis.domain = domain;\n\t\tthis.subdomain = subdomain;\n\t\tthis.data = data;\n\t\tthis.discrete_domains = discrete_domains;\n\t\tthis.count_label = count_label;\n\n\t\tlet today = new Date();\n\t\tthis.start = start || this.add_days(today, 365);\n\n\t\tthis.legend_colors = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\n\n\t\tthis.translate_x = 0;\n\t\tthis.setup();\n\t}\n\n\tsetup_base_values() {\n\t\tthis.today = new Date();\n\n\t\tif(!this.start) {\n\t\t\tthis.start = new Date();\n\t\t\tthis.start.setFullYear( this.start.getFullYear() - 1 );\n\t\t}\n\t\tthis.first_week_start = new Date(this.start.toDateString());\n\t\tthis.last_week_start = new Date(this.today.toDateString());\n\t\tif(this.first_week_start.getDay() !== 7) {\n\t\t\tthis.add_days(this.first_week_start, (-1) * this.first_week_start.getDay());\n\t\t}\n\t\tif(this.last_week_start.getDay() !== 7) {\n\t\t\tthis.add_days(this.last_week_start, (-1) * this.last_week_start.getDay());\n\t\t}\n\t\tthis.no_of_cols = this.get_weeks_between(this.first_week_start + '', this.last_week_start + '') + 1;\n\t}\n\n\tset_width() {\n\t\tthis.base_width = (this.no_of_cols + 3) * 12 ;\n\n\t\tif(this.discrete_domains) {\n\t\t\tthis.base_width += (12 * 12);\n\t\t}\n\t}\n\n\tsetup_components() {\n\t\tthis.domain_label_group = $.createSVG(\"g\", {\n\t\t\tclassName: \"domain-label-group chart-label\",\n\t\t\tinside: this.draw_area\n\t\t});\n\t\tthis.data_groups = $.createSVG(\"g\", {\n\t\t\tclassName: \"data-groups\",\n\t\t\tinside: this.draw_area,\n\t\t\ttransform: `translate(0, 20)`\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tthis.domain_label_group.textContent = '';\n\t\tthis.data_groups.textContent = '';\n\t\tthis.distribution = this.get_distribution(this.data, this.legend_colors);\n\t\tthis.month_names = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t\t];\n\n\t\tthis.render_all_weeks_and_store_x_values(this.no_of_cols);\n\t}\n\n\trender_all_weeks_and_store_x_values(no_of_weeks) {\n\t\tlet current_week_sunday = new Date(this.first_week_start);\n\t\tthis.week_col = 0;\n\t\tthis.current_month = current_week_sunday.getMonth();\n\n\t\tthis.months = [this.current_month + ''];\n\t\tthis.month_weeks = {}, this.month_start_points = [];\n\t\tthis.month_weeks[this.current_month] = 0;\n\t\tthis.month_start_points.push(13);\n\n\t\tfor(var i = 0; i < no_of_weeks; i++) {\n\t\t\tlet data_group, month_change = 0;\n\t\t\tlet day = new Date(current_week_sunday);\n\n\t\t\t[data_group, month_change] = this.get_week_squares_group(day, this.week_col);\n\t\t\tthis.data_groups.appendChild(data_group);\n\t\t\tthis.week_col += 1 + parseInt(this.discrete_domains && month_change);\n\t\t\tthis.month_weeks[this.current_month]++;\n\t\t\tif(month_change) {\n\t\t\t\tthis.current_month = (this.current_month + 1) % 12;\n\t\t\t\tthis.months.push(this.current_month + '');\n\t\t\t\tthis.month_weeks[this.current_month] = 1;\n\t\t\t}\n\t\t\tthis.add_days(current_week_sunday, 7);\n\t\t}\n\t\tthis.render_month_labels();\n\t}\n\n\tget_week_squares_group(current_date, index) {\n\t\tconst no_of_weekdays = 7;\n\t\tconst square_side = 10;\n\t\tconst cell_padding = 2;\n\t\tconst step = 1;\n\n\t\tlet month_change = 0;\n\t\tlet week_col_change = 0;\n\n\t\tlet data_group = $.createSVG(\"g\", {\n\t\t\tclassName: \"data-group\",\n\t\t\tinside: this.data_groups\n\t\t});\n\n\t\tfor(var y = 0, i = 0; i < no_of_weekdays; i += step, y += (square_side + cell_padding)) {\n\t\t\tlet data_value = 0;\n\t\t\tlet color_index = 0;\n\n\t\t\tlet current_timestamp = current_date.getTime()/1000;\n\t\t\tlet timestamp = Math.floor(current_timestamp - (current_timestamp % 86400)).toFixed(1);\n\n\t\t\tif(this.data[timestamp]) {\n\t\t\t\tdata_value = this.data[timestamp];\n\t\t\t\tcolor_index = this.get_max_checkpoint(data_value, this.distribution);\n\t\t\t}\n\n\t\t\tif(this.data[Math.round(timestamp)]) {\n\t\t\t\tdata_value = this.data[Math.round(timestamp)];\n\t\t\t\tcolor_index = this.get_max_checkpoint(data_value, this.distribution);\n\t\t\t}\n\n\t\t\tlet x = 13 + (index + week_col_change) * 12;\n\n\t\t\t$.createSVG(\"rect\", {\n\t\t\t\tclassName: 'day',\n\t\t\t\tinside: data_group,\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\twidth: square_side,\n\t\t\t\theight: square_side,\n\t\t\t\tfill:  this.legend_colors[color_index],\n\t\t\t\t'data-date': this.get_dd_mm_yyyy(current_date),\n\t\t\t\t'data-value': data_value,\n\t\t\t\t'data-day': current_date.getDay()\n\t\t\t});\n\n\t\t\tlet next_date = new Date(current_date);\n\t\t\tthis.add_days(next_date, 1);\n\t\t\tif(next_date.getMonth() - current_date.getMonth()) {\n\t\t\t\tmonth_change = 1;\n\t\t\t\tif(this.discrete_domains) {\n\t\t\t\t\tweek_col_change = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.month_start_points.push(13 + (index + week_col_change) * 12);\n\t\t\t}\n\t\t\tcurrent_date = next_date;\n\t\t}\n\n\t\treturn [data_group, month_change];\n\t}\n\n\trender_month_labels() {\n\t\t// this.first_month_label = 1;\n\t\t// if (this.first_week_start.getDate() > 8) {\n\t\t// \tthis.first_month_label = 0;\n\t\t// }\n\t\t// this.last_month_label = 1;\n\n\t\t// let first_month = this.months.shift();\n\t\t// let first_month_start = this.month_start_points.shift();\n\t\t// render first month if\n\n\t\t// let last_month = this.months.pop();\n\t\t// let last_month_start = this.month_start_points.pop();\n\t\t// render last month if\n\n\t\tthis.months.shift();\n\t\tthis.month_start_points.shift();\n\t\tthis.months.pop();\n\t\tthis.month_start_points.pop();\n\n\t\tthis.month_start_points.map((start, i) => {\n\t\t\tlet month_name =  this.month_names[this.months[i]].substring(0, 3);\n\n\t\t\t$.createSVG('text', {\n\t\t\t\tclassName: 'y-value-text',\n\t\t\t\tinside: this.domain_label_group,\n\t\t\t\tx: start + 12,\n\t\t\t\ty: 10,\n\t\t\t\tdy: '.32em',\n\t\t\t\tinnerHTML: month_name\n\t\t\t});\n\n\t\t});\n\t}\n\n\tmake_graph_components() {\n\t\tArray.prototype.slice.call(\n\t\t\tthis.container.querySelectorAll('.graph-stats-container, .sub-title, .title')\n\t\t).map(d => {\n\t\t\td.style.display = 'None';\n\t\t});\n\t\tthis.chart_wrapper.style.marginTop = '0px';\n\t\tthis.chart_wrapper.style.paddingTop = '0px';\n\t}\n\n\tbind_tooltip() {\n\t\tArray.prototype.slice.call(\n\t\t\tdocument.querySelectorAll(\".data-group .day\")\n\t\t).map(el => {\n\t\t\tel.addEventListener('mouseenter', (e) => {\n\t\t\t\tlet count = e.target.getAttribute('data-value');\n\t\t\t\tlet date_parts = e.target.getAttribute('data-date').split('-');\n\n\t\t\t\tlet month = this.month_names[parseInt(date_parts[1])-1].substring(0, 3);\n\n\t\t\t\tlet g_off = this.chart_wrapper.getBoundingClientRect(), p_off = e.target.getBoundingClientRect();\n\n\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\tlet x = p_off.left - g_off.left + (width+2)/2;\n\t\t\t\tlet y = p_off.top - g_off.top - (width+2)/2;\n\t\t\t\tlet value = count + ' ' + this.count_label;\n\t\t\t\tlet name = ' on ' + month + ' ' + date_parts[0] + ', ' + date_parts[2];\n\n\t\t\t\tthis.tip.set_values(x, y, name, value, [], 1);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tthis.data = data;\n\t\tthis.setup_values();\n\t\tthis.bind_tooltip();\n\t}\n\n\tget_distribution(data={}, mapper_array) {\n\t\tlet data_values = Object.keys(data).map(key => data[key]);\n\t\tlet data_max_value = Math.max(...data_values);\n\n\t\tlet distribution_step = 1 / (mapper_array.length - 1);\n\t\tlet distribution = [];\n\n\t\tmapper_array.map((color, i) => {\n\t\t\tlet checkpoint = data_max_value * (distribution_step * i);\n\t\t\tdistribution.push(checkpoint);\n\t\t});\n\n\t\treturn distribution;\n\t}\n\n\tget_max_checkpoint(value, distribution) {\n\t\treturn distribution.filter((d, i) => {\n\t\t\tif(i === 1) {\n\t\t\t\treturn distribution[0] < value;\n\t\t\t}\n\t\t\treturn d <= value;\n\t\t}).length - 1;\n\t}\n\n\t// TODO: date utils, move these out\n\n\t// https://stackoverflow.com/a/11252167/6495043\n\ttreat_as_utc(date_str) {\n\t\tlet result = new Date(date_str);\n\t\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\t\treturn result;\n\t}\n\n\tget_dd_mm_yyyy(date) {\n\t\tlet dd = date.getDate();\n\t\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\t\treturn [\n\t\t\t(dd>9 ? '' : '0') + dd,\n\t\t\t(mm>9 ? '' : '0') + mm,\n\t\t\tdate.getFullYear()\n\t\t].join('-');\n\t}\n\n\tget_weeks_between(start_date_str, end_date_str) {\n\t\treturn Math.ceil(this.get_days_between(start_date_str, end_date_str) / 7);\n\t}\n\n\tget_days_between(start_date_str, end_date_str) {\n\t\tlet milliseconds_per_day = 24 * 60 * 60 * 1000;\n\t\treturn (this.treat_as_utc(end_date_str) - this.treat_as_utc(start_date_str)) / milliseconds_per_day;\n\t}\n\n\t// mutates\n\tadd_days(date, number_of_days) {\n\t\tdate.setDate(date.getDate() + number_of_days);\n\t}\n\n\tget_month_name() {}\n}\n"],"names":["expr","con","document","querySelector","float_2","d","parseFloat","toFixed","arrays_equal","arr1","arr2","length","are_equal","map","i","limitColor","r","lightenDarkenColor","col","amt","usePound","slice","num","parseInt","b","g","toString","getChartByType","chartType","options","chartTypes","LineChart","EASING","$","findNodeIndex","node","previousSibling","create","tag","o","element","createElement","val","appendChild","ref","parentNode","insertBefore","keys","style","prop","setAttribute","createSVG","createElementNS","runSVGAnimation","svg_container","elements","new_elements","anim_elements","obj","parent","unit","anim_element","new_element","animateSVG","push","replaceChild","array","index","object","key","anim_svg","cloneNode","transform","webkitTransform","msTransform","mozTransform","oTransform","props","dur","easing_type","type","undefined","old_values","attributeName","animate_element","current_value","getAttribute","value","anim_attr","offset","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","bind","event","callback","split","forEach","addEventListener","unbind","removeEventListener","fire","target","properties","evt","createEvent","initEvent","j","dispatchEvent","SvgTip","title_name","title_value","list_values","title_value_first","x","y","setup","make_tooltip","fill","calc_position","container","this","hide_tip","title","data_point_list","innerHTML","set","li","color","offsetHeight","offsetWidth","max_left","pointer","delta","refresh","opacity","BaseChart","height","subtitle","format_lambdas","summary","is_navigable","has_legend","data","raw_chart_args","arguments","specific_values","current_index","chart_types","set_margins","includes","error","Chart","base_height","translate_x","translate_y","bind_window_events","_this","init","setup_base_values","set_width","setup_container","setup_components","setup_values","setup_utils","make_graph_components","show_custom_summary","show_summary","setup_navigation","special_values_width","_this2","get_strwidth","base_width","width","chart_wrapper","stats_wrapper","make_chart_area","make_draw_area","svg","svg_defs","draw_area","tip","bind_tooltip","stats","make_overlay","bind_overlay","e","_this4","keyCode","on_left_arrow","on_right_arrow","on_up_arrow","on_down_arrow","on_enter_key","data_point","data_key","label","get_data_point","string","AxisChart","args","labels","datasets","is_series","get_y_label","y_label","get_y_tooltip","y_tooltip","get_x_tooltip","x_tooltip","colors","zero_line","values","isNaN","setup_x","setup_y","set_avg_unit_width_and_x_offset","x_axis_positions","x_old_axis_positions","x_offset","avg_unit_width","y_axis_values","y_old_axis_values","get_all_y_values","y_sums","concat","get_y_axis_points","y_pts","value_range","multiplier","old_multiplier","zero_index","indexOf","interval_height","old_zero_line","setup_marker_components","setup_aggregation_components","setup_graph_components","y_axis_group","className","inside","x_axis_group","specific_y_group","sum_group","average_group","svg_units_groups","_this3","make_y_axis","make_x_axis","draw_graph","make_y_specifics","animate","start_at","text_start_at","axis_line_class","x_axis_mode","make_anim_x_axis","allowed_space","allowed_letters","textContent","point","space_taken","skips","make_x_line","make_anim_y_axis","make_anim_y_specifics","get_y_axis_line_props","text_end_at","_this5","make_y_line","y_axis_mode","hasOwnProperty","draw_new_graph_and_animate","svg_units","make_path","_this6","y_tops","make_new_units","calc_y_dependencies","Array","_this7","update_values","make_new_units_for_dataset","x_values","y_values","dataset_index","no_of_datasets","units_group","units_array","unit_args","data_unit","_this9","draw","bind_units","_this10","toUpperCase","line_type","_this11","relX","pageX","pageY","map_tooltip_x_position_and_show","y_min_tops","x_val","formatted","_this12","set_values","show_tip","updating","sum_units","_this13","old_specific_values","sum","average","indices_to_remove","auto","unshift","splice","new_y","new_x","elements_to_animate","old_x_values","old_y_axis_tops","old_y_values","no_of_extra_pts","_this16","animate_graphs","run_animation","y_point","x_point","data_set","removeChild","_this17","_this18","calc_old_and_new_postions","old_x","old_y","path","animate_path","animate_units","new_path_str","join","path_args","region_path","reg_start_pt","reg_end_pt","region_args","_this19","last_old_x_pos","last_old_y_pos","last_new_x_pos","last_new_y_pos","filler_x","Math","abs","filler_y","old_pos","new_pos","old_vals","new_vals","last_line_pos","make_new_axis_anim_lines","substring","x_line","_this20","_this21","add_and_animate_y_line","_this22","add_and_animate_line","group","superimposed_positions","superimposed_values","no_of_extras","filler_vals","filler_pos","extra_values","extra_positions","label_class","x_pos","line","text","x_level","y_pos","darker","y_level","stroke","specific","filler","new_props","old_props","axis_label_class","y_line","min_bound","pos_no_of_parts","neg_no_of_parts","part_size","max_val","max","min_val","min","get_params","value1","value2","bound1","bound2","no_of_parts_1","no_of_parts_2","interval_size","_this23","calc_upper_bound_and_no_of_parts","calc_no_of_parts","abs_min_val","no_of_parts","get_intervals","start","count","intervals","pow","divisor","ceil","all_values","_this24","y_top","total_width","_this25","space_width","current_x","get_bar_height_and_y_attr","radius","bar_obj","dot_obj","cx","cy","BarChart","update_current_data_point","overlay","update_overlay","svg_unit","attributes","filter","attr","specified","name","nodeValue","show_dots","region_fill","Object","getPrototypeOf","prototype","dot_radius","heatline","setup_path_groups","paths_groups","x_positions","y_positions","points_str","gradient_id","make_gradient","fill_region_for_dataset","lighter","gradient_def","set_gradient_stop","grad_elem","opacities","ScatterChart","PercentageChart","max_slices","max_legend_points","marginTop","marginBottom","paddingTop","chart_div","chart","percentage_bar","slice_totals","all_totals","total","totals","sort","a","sum_of_others","legend_totals","grand_total","reduce","slices","g_off","p_off","formatted_labels","percent","ANGLE_RATIO","PI","PieChart","hoverRadio","isAnimate","startAngle","clockWise","mouseMove","mouseLeave","centerX","centerY","startPosition","endPosition","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","getPositionByAngle","prevProperty","curStart","curEnd","curPath","makeArcPath","property","position","angle","flag","calTranslateByAngle","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","sin","cos","Heatmap","domain","subdomain","discrete_domains","count_label","today","Date","add_days","legend_colors","setFullYear","getFullYear","first_week_start","toDateString","last_week_start","getDay","no_of_cols","get_weeks_between","domain_label_group","data_groups","distribution","get_distribution","month_names","render_all_weeks_and_store_x_values","no_of_weeks","current_week_sunday","week_col","current_month","getMonth","months","month_weeks","month_start_points","data_group","month_change","day","get_week_squares_group","render_month_labels","current_date","week_col_change","square_side","data_value","color_index","current_timestamp","getTime","timestamp","floor","get_max_checkpoint","round","get_dd_mm_yyyy","next_date","shift","pop","month_name","call","querySelectorAll","display","date_parts","month","mapper_array","data_values","data_max_value","distribution_step","checkpoint","date_str","result","setMinutes","getMinutes","getTimezoneOffset","date","dd","getDate","mm","start_date_str","end_date_str","get_days_between","treat_as_utc","number_of_days","setDate"],"mappings":"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"}