{"version":3,"file":"frappe-charts.min.js","sources":["../src/scripts/helpers/dom.js","../src/scripts/helpers/utils.js","../src/scripts/objects/SvgTip.js","../src/scripts/charts/BaseChart.js","../src/scripts/charts/AxisChart.js","../src/scripts/charts/BarChart.js","../src/scripts/charts/LineChart.js","../src/scripts/charts/PercentageChart.js","../src/scripts/charts/Heatmap.js","../src/scripts/charts.js"],"sourcesContent":["export default function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\n$.findNodeIndex = (node) =>\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n};\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\t\t}\n\t\telse if (i in element) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\n$.createSVG = (tag, o) => {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\t\t}\n\t\telse {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n};\n\n$.runSVGAnimation = (svg_container, elements) => {\n\t// let parent = elements[0][0]['unit'].parentNode;\n\n\tlet new_elements = [];\n\tlet anim_elements = [];\n\n\telements.map(element => {\n\t\tlet obj = element[0];\n\t\tlet parent = obj.unit.parentNode;\n\t\t// let index = let findNodeIndex(obj.unit);\n\n\t\tlet anim_element, new_element;\n\n\t\telement[0] = obj.unit;\n\n\t\t[anim_element, new_element] = $.animateSVG(...element);\n\n\t\tnew_elements.push(new_element);\n\t\tanim_elements.push([anim_element, parent]);\n\n\t\tparent.replaceChild(anim_element, obj.unit);\n\n\t\tif(obj.array) {\n\t\t\tobj.array[obj.index] = new_element;\n\t\t} else {\n\t\t\tobj.object[obj.key] = new_element;\n\t\t}\n\t});\n\n\tlet anim_svg = svg_container.cloneNode(true);\n\n\tanim_elements.map((anim_element, i) => {\n\t\tanim_element[1].replaceChild(new_elements[i], anim_element[0]);\n\t\telements[i][0] = new_elements[i];\n\t});\n\n\treturn anim_svg;\n};\n\n$.animateSVG = (element, props, dur, easing_type=\"linear\", type=undefined, old_values={}) => {\n\tlet easing = {\n\t\tease: \"0.25 0.1 0.25 1\",\n\t\tlinear: \"0 0 1 1\",\n\t\t// easein: \"0.42 0 1 1\",\n\t\teasein: \"0.1 0.8 0.2 1\",\n\t\teaseout: \"0 0 0.58 1\",\n\t\teaseinout: \"0.42 0 0.58 1\"\n\t};\n\n\tlet anim_element = element.cloneNode(true);\n\tlet new_element = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animate_element;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimate_element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimate_element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet current_value = old_values[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet anim_attr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: current_value,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: current_value + \";\" + value,\n\t\t\tkeySplines: easing[easing_type],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanim_attr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in anim_attr) {\n\t\t\tanimate_element.setAttribute(i, anim_attr[i]);\n\t\t}\n\n\t\tanim_element.appendChild(animate_element);\n\n\t\tif(type) {\n\t\t\tnew_element.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnew_element.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [anim_element, new_element];\n};\n\n$.offset = (element) => {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n};\n\n$.isElementInViewport = (el) => {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n};\n\n$.bind = (element, o) => {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n};\n\n$.unbind = (element, o) => {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n};\n\n$.fire = (target, type, properties) => {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n};\n","export function float_2(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\nexport function arrays_equal(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet are_equal = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) are_equal = false;\n\t});\n\treturn are_equal;\n}\n\nexport function shuffle(array) {\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\n\tvar currentIndex = array.length, temporaryValue, randomIndex;\n\n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\n\treturn array;\n}\n","import $ from '../helpers/dom';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.title_name = '';\n\t\tthis.title_value = '';\n\t\tthis.list_values = [];\n\t\tthis.title_value_first = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.make_tooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calc_position();\n\t\t// this.show_tip();\n\t}\n\n\tmake_tooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hide_tip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.data_point_list = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hide_tip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.title_value_first) {\n\t\t\ttitle = `<strong>${this.title_value}</strong>${this.title_name}`;\n\t\t} else {\n\t\t\ttitle = `${this.title_name}<strong>${this.title_value}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.data_point_list.innerHTML = '';\n\n\t\tthis.list_values.map((set) => {\n\t\t\tlet li = $.create('li', {\n\t\t\t\tclassName: `border-top ${set.color || 'black'}`,\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${set.value ? set.value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.data_point_list.appendChild(li);\n\t\t});\n\t}\n\n\tcalc_position() {\n\t\tthis.top = this.y - this.container.offsetHeight;\n\t\tthis.left = this.x - this.container.offsetWidth/2;\n\t\tlet max_left = this.parent.offsetWidth - this.container.offsetWidth;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > max_left) {\n\t\t\tlet delta = this.left - max_left;\n\t\t\tpointer.style.left = `calc(50% + ${delta}px)`;\n\t\t\tthis.left = max_left;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tset_values(x, y, title_name = '', title_value = '', list_values = [], title_value_first = 0) {\n\t\tthis.title_name = title_name;\n\t\tthis.title_value = title_value;\n\t\tthis.list_values = list_values;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.title_value_first = title_value_first;\n\t\tthis.refresh();\n\t}\n\n\thide_tip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshow_tip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","import SvgTip from '../objects/SvgTip';\nimport $ from '../helpers/dom';\n\nexport default class BaseChart {\n\tconstructor({\n\t\tparent = \"\",\n\t\theight = 240,\n\n\t\ttitle = '', subtitle = '',\n\n\t\tdata = {},\n\t\tformat_lambdas = {},\n\n\t\tsummary = [],\n\n\t\tis_navigable = 0,\n\n\t\ttype = '' // eslint-disable-line no-unused-vars\n\t}) {\n\t\tthis.raw_chart_args = arguments[0];\n\n\t\tthis.parent = document.querySelector(parent);\n\t\tthis.title = title;\n\t\tthis.subtitle = subtitle;\n\n\t\tthis.data = data;\n\t\tthis.format_lambdas = format_lambdas;\n\n\t\tthis.specific_values = data.specific_values || [];\n\t\tthis.summary = summary;\n\n\t\tthis.is_navigable = is_navigable;\n\t\tif(this.is_navigable) {\n\t\t\tthis.current_index = 0;\n\t\t}\n\n\t\tthis.chart_types = ['line', 'bar', 'percentage', 'heatmap'];\n\n\t\tthis.set_margins(height);\n\t}\n\n\tget_different_chart(type) {\n\t\tif(!this.chart_types.includes(type)) {\n\t\t\tconsole.error(`'${type}' is not a valid chart type.`);\n\t\t}\n\t\tif(type === this.type) return;\n\n\t\t// Only across compatible types\n\t\tlet compatible_types = {\n\t\t\tbar: ['line', 'percentage'],\n\t\t\tline: ['bar', 'percentage'],\n\t\t\tpercentage: ['bar', 'line'],\n\t\t\theatmap: []\n\t\t};\n\n\t\tif(!compatible_types[this.type].includes(type)) {\n\t\t\tconsole.error(`'${this.type}' chart cannot be converted to a '${type}' chart.`);\n\t\t}\n\n\t\t// Okay, this is anticlimactic\n\t\t// this function will need to actually be 'change_chart_type(type)'\n\t\t// that will update only the required elements, but for now ...\n\t\treturn new BaseChart({\n\t\t\tparent: this.raw_chart_args.parent,\n\t\t\tdata: this.raw_chart_args.data,\n\t\t\ttype: type,\n\t\t\theight: this.raw_chart_args.height\n\t\t});\n\t}\n\n\tset_margins(height) {\n\t\tthis.base_height = height;\n\t\tthis.height = height - 40;\n\t\tthis.translate_x = 60;\n\t\tthis.translate_y = 10;\n\t}\n\n\tsetup() {\n\t\tthis.bind_window_events();\n\t\tthis.refresh(true);\n\t}\n\n\tbind_window_events() {\n\t\twindow.addEventListener('resize', () => this.refresh());\n\t\twindow.addEventListener('orientationchange', () => this.refresh());\n\t}\n\n\trefresh(init=false) {\n\t\tthis.setup_base_values();\n\t\tthis.set_width();\n\n\t\tthis.setup_container();\n\t\tthis.setup_components();\n\n\t\tthis.setup_values();\n\t\tthis.setup_utils();\n\n\t\tthis.make_graph_components(init);\n\t\tthis.make_tooltip();\n\n\t\tif(this.summary.length > 0) {\n\t\t\tthis.show_custom_summary();\n\t\t} else {\n\t\t\tthis.show_summary();\n\t\t}\n\n\t\tif(this.is_navigable) {\n\t\t\tthis.setup_navigation(init);\n\t\t}\n\t}\n\n\tset_width() {\n\t\tlet special_values_width = 0;\n\t\tthis.specific_values.map(val => {\n\t\t\tif(this.get_strwidth(val.title) > special_values_width) {\n\t\t\t\tspecial_values_width = this.get_strwidth(val.title) - 40;\n\t\t\t}\n\t\t});\n\t\tthis.base_width = this.parent.offsetWidth - special_values_width;\n\t\tthis.width = this.base_width - this.translate_x * 2;\n\t}\n\n\tsetup_base_values() {}\n\n\tsetup_container() {\n\t\tthis.container = $.create('div', {\n\t\t\tclassName: 'chart-container',\n\t\t\tinnerHTML: `<h6 class=\"title\" style=\"margin-top: 15px;\">${this.title}</h6>\n\t\t\t\t<h6 class=\"sub-title uppercase\">${this.subtitle}</h6>\n\t\t\t\t<div class=\"frappe-chart graphics\"></div>\n\t\t\t\t<div class=\"graph-stats-container\"></div>`\n\t\t});\n\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\t\tthis.parent.appendChild(this.container);\n\n\t\tthis.chart_wrapper = this.container.querySelector('.frappe-chart');\n\t\tthis.stats_wrapper = this.container.querySelector('.graph-stats-container');\n\n\t\tthis.make_chart_area();\n\t\tthis.make_draw_area();\n\t}\n\n\tmake_chart_area() {\n\t\tthis.svg = $.createSVG('svg', {\n\t\t\tclassName: 'chart',\n\t\t\tinside: this.chart_wrapper,\n\t\t\twidth: this.base_width,\n\t\t\theight: this.base_height\n\t\t});\n\n\t\tthis.svg_defs = $.createSVG('defs', {\n\t\t\tinside: this.svg,\n\t\t});\n\n\t\treturn this.svg;\n\t}\n\n\tmake_draw_area() {\n\t\tthis.draw_area = $.createSVG(\"g\", {\n\t\t\tclassName: this.type + '-chart',\n\t\t\tinside: this.svg,\n\t\t\ttransform: `translate(${this.translate_x}, ${this.translate_y})`\n\t\t});\n\t}\n\n\tsetup_components() { }\n\n\tmake_tooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.chart_wrapper,\n\t\t});\n\t\tthis.bind_tooltip();\n\t}\n\n\n\tshow_summary() {}\n\tshow_custom_summary() {\n\t\tthis.summary.map(d => {\n\t\t\tlet stats = $.create('div', {\n\t\t\t\tclassName: 'stats',\n\t\t\t\tinnerHTML: `<span class=\"indicator ${d.color}\">${d.title}: ${d.value}</span>`\n\t\t\t});\n\t\t\tthis.stats_wrapper.appendChild(stats);\n\t\t});\n\t}\n\n\tsetup_navigation(init=false) {\n\t\tthis.make_overlay();\n\n\t\tif(init) {\n\t\t\tthis.bind_overlay();\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif($.isElementInViewport(this.chart_wrapper)) {\n\t\t\t\t\te = e || window.event;\n\n\t\t\t\t\tif (e.keyCode == '37') {\n\t\t\t\t\t\tthis.on_left_arrow();\n\t\t\t\t\t} else if (e.keyCode == '39') {\n\t\t\t\t\t\tthis.on_right_arrow();\n\t\t\t\t\t} else if (e.keyCode == '38') {\n\t\t\t\t\t\tthis.on_up_arrow();\n\t\t\t\t\t} else if (e.keyCode == '40') {\n\t\t\t\t\t\tthis.on_down_arrow();\n\t\t\t\t\t} else if (e.keyCode == '13') {\n\t\t\t\t\t\tthis.on_enter_key();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmake_overlay() {}\n\tbind_overlay() {}\n\n\ton_left_arrow() {}\n\ton_right_arrow() {}\n\ton_up_arrow() {}\n\ton_down_arrow() {}\n\ton_enter_key() {}\n\n\tget_data_point(index=this.current_index) {\n\t\t// check for length\n\t\tlet data_point = {\n\t\t\tindex: index\n\t\t};\n\t\tlet y = this.y[0];\n\t\t['svg_units', 'y_tops', 'values'].map(key => {\n\t\t\tlet data_key = key.slice(0, key.length-1);\n\t\t\tdata_point[data_key] = y[key][index];\n\t\t});\n\t\tdata_point.label = this.x[index];\n\t\treturn data_point;\n\t}\n\n\tupdate_current_data_point(index) {\n\t\tif(index < 0) index = 0;\n\t\tif(index >= this.x.length) index = this.x.length - 1;\n\t\tif(index === this.current_index) return;\n\t\tthis.current_index = index;\n\t\t$.fire(this.parent, \"data-select\", this.get_data_point());\n\t}\n\n\t// Helpers\n\tget_strwidth(string) {\n\t\treturn string.length * 8;\n\t}\n\n\t// Objects\n\tsetup_utils() { }\n}\n","import $ from '../helpers/dom';\nimport { float_2, arrays_equal } from '../helpers/utils';\nimport BaseChart from './BaseChart';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.x = this.data.labels;\n\t\tthis.y = this.data.datasets;\n\n\t\tthis.get_y_label = this.format_lambdas.y_label;\n\t\tthis.get_y_tooltip = this.format_lambdas.y_tooltip;\n\t\tthis.get_x_tooltip = this.format_lambdas.x_tooltip;\n\n\t\tthis.colors = ['green', 'blue', 'violet', 'red', 'orange',\n\t\t\t'yellow', 'light-blue', 'light-green', 'purple', 'magenta'];\n\n\t\tthis.zero_line = this.height;\n\t}\n\n\tsetup_values() {\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values = d.values.map(val => (!isNaN(val) ? val : 0));\n\t\t});\n\t\tthis.setup_x();\n\t\tthis.setup_y();\n\t}\n\n\tsetup_x() {\n\t\tthis.set_avg_unit_width_and_x_offset();\n\n\t\tif(this.x_axis_positions) {\n\t\t\tthis.x_old_axis_positions =  this.x_axis_positions.slice();\n\t\t}\n\t\tthis.x_axis_positions = this.x.map((d, i) =>\n\t\t\tfloat_2(this.x_offset + i * this.avg_unit_width));\n\n\t\tif(!this.x_old_axis_positions) {\n\t\t\tthis.x_old_axis_positions = this.x_axis_positions.slice();\n\t\t}\n\t}\n\n\tsetup_y() {\n\t\tif(this.y_axis_values) {\n\t\t\tthis.y_old_axis_values =  this.y_axis_values.slice();\n\t\t}\n\n\t\tlet values = this.get_all_y_values();\n\n\t\tif(this.y_sums && this.y_sums.length > 0) {\n\t\t\tvalues = values.concat(this.y_sums);\n\t\t}\n\n\t\tthis.y_axis_values = this.get_y_axis_points(values);\n\n\t\tif(!this.y_old_axis_values) {\n\t\t\tthis.y_old_axis_values = this.y_axis_values.slice();\n\t\t}\n\n\t\tconst y_pts = this.y_axis_values;\n\t\tconst value_range = y_pts[y_pts.length-1] - y_pts[0];\n\n\t\tif(this.multiplier) this.old_multiplier = this.multiplier;\n\t\tthis.multiplier = this.height / value_range;\n\t\tif(!this.old_multiplier) this.old_multiplier = this.multiplier;\n\n\t\tconst zero_index = y_pts.indexOf(0);\n\t\tconst interval = y_pts[1] - y_pts[0];\n\t\tconst interval_height = interval * this.multiplier;\n\n\t\tif(this.zero_line) this.old_zero_line = this.zero_line;\n\t\tthis.zero_line = this.height - (zero_index * interval_height);\n\t\tif(!this.old_zero_line) this.old_zero_line = this.zero_line;\n\t}\n\n\tsetup_components() {\n\t\tsuper.setup_components();\n\t\tthis.setup_marker_components();\n\t\tthis.setup_aggregation_components();\n\t\tthis.setup_graph_components();\n\t}\n\n\tsetup_marker_components() {\n\t\tthis.y_axis_group = $.createSVG('g', {className: 'y axis', inside: this.draw_area});\n\t\tthis.x_axis_group = $.createSVG('g', {className: 'x axis', inside: this.draw_area});\n\t\tthis.specific_y_group = $.createSVG('g', {className: 'specific axis', inside: this.draw_area});\n\t}\n\n\tsetup_aggregation_components() {\n\t\tthis.sum_group = $.createSVG('g', {className: 'data-points', inside: this.draw_area});\n\t\tthis.average_group = $.createSVG('g', {className: 'chart-area', inside: this.draw_area});\n\t}\n\n\tsetup_graph_components() {\n\t\tthis.svg_units_groups = [];\n\t\tthis.y.map((d, i) => {\n\t\t\tthis.svg_units_groups[i] = $.createSVG('g', {\n\t\t\t\tclassName: 'data-points data-points-' + i,\n\t\t\t\tinside: this.draw_area\n\t\t\t});\n\t\t});\n\t}\n\n\tmake_graph_components(init=false) {\n\t\tthis.make_y_axis();\n\t\tthis.make_x_axis();\n\t\tthis.draw_graph(init);\n\t\tthis.make_y_specifics();\n\t}\n\n\t// make VERTICAL lines for x values\n\tmake_x_axis(animate=false) {\n\t\tlet start_at, height, text_start_at, axis_line_class = '';\n\t\tif(this.x_axis_mode === 'span') {\t\t// long spanning lines\n\t\t\tstart_at = -7;\n\t\t\theight = this.height + 15;\n\t\t\ttext_start_at = this.height + 25;\n\t\t} else if(this.x_axis_mode === 'tick'){\t// short label lines\n\t\t\tstart_at = this.height;\n\t\t\theight = 6;\n\t\t\ttext_start_at = 9;\n\t\t\taxis_line_class = 'x-axis-label';\n\t\t}\n\n\t\tthis.x_axis_group.setAttribute('transform', `translate(0,${start_at})`);\n\n\t\tif(animate) {\n\t\t\tthis.make_anim_x_axis(height, text_start_at, axis_line_class);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.x_axis_group.textContent = '';\n\t\tthis.x.map((point, i) => {\n\t\t\tthis.x_axis_group.appendChild(\n\t\t\t\tthis.make_x_line(\n\t\t\t\t\theight,\n\t\t\t\t\ttext_start_at,\n\t\t\t\t\tpoint,\n\t\t\t\t\t'x-value-text',\n\t\t\t\t\taxis_line_class,\n\t\t\t\t\tthis.x_axis_positions[i]\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t}\n\n\t// make HORIZONTAL lines for y values\n\tmake_y_axis(animate=false) {\n\t\tif(animate) {\n\t\t\tthis.make_anim_y_axis();\n\t\t\tthis.make_anim_y_specifics();\n\t\t\treturn;\n\t\t}\n\n\t\tlet [width, text_end_at, axis_line_class, start_at] = this.get_y_axis_line_props();\n\n\t\tthis.y_axis_group.textContent = '';\n\t\tthis.y_axis_values.map((value, i) => {\n\t\t\tthis.y_axis_group.appendChild(\n\t\t\t\tthis.make_y_line(\n\t\t\t\t\tstart_at,\n\t\t\t\t\twidth,\n\t\t\t\t\ttext_end_at,\n\t\t\t\t\tvalue,\n\t\t\t\t\t'y-value-text',\n\t\t\t\t\taxis_line_class,\n\t\t\t\t\tthis.zero_line - value * this.multiplier,\n\t\t\t\t\t(value === 0 && i !== 0) // Non-first Zero line\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t}\n\n\tget_y_axis_line_props(specific=false) {\n\t\tif(specific) {\n\t\t\treturn[this.width, this.width + 5, 'specific-value', 0];\n\t\t}\n\t\tlet width, text_end_at = -9, axis_line_class = '', start_at = 0;\n\t\tif(this.y_axis_mode === 'span') {\t\t// long spanning lines\n\t\t\twidth = this.width + 6;\n\t\t\tstart_at = -6;\n\t\t} else if(this.y_axis_mode === 'tick'){\t// short label lines\n\t\t\twidth = -6;\n\t\t\taxis_line_class = 'y-axis-label';\n\t\t}\n\n\t\treturn [width, text_end_at, axis_line_class, start_at];\n\t}\n\n\tdraw_graph(init=false) {\n\t\tif(init) {\n\t\t\tthis.draw_new_graph_and_animate();\n\t\t\treturn;\n\t\t}\n\t\tthis.y.map((d, i) => {\n\t\t\td.svg_units = [];\n\t\t\tthis.make_path && this.make_path(d, i, this.x_axis_positions, d.y_tops, d.color || this.colors[i]);\n\t\t\tthis.make_new_units(d, i);\n\t\t});\n\t}\n\n\tdraw_new_graph_and_animate() {\n\t\tlet data = [];\n\t\tthis.y.map((d, i) => {\n\t\t\t// Anim: Don't draw initial values, store them and update later\n\t\t\td.y_tops = new Array(d.values.length).fill(this.zero_line); // no value\n\t\t\tdata.push({values: d.values});\n\t\t\td.svg_units = [];\n\n\t\t\tthis.make_path && this.make_path(d, i, this.x_axis_positions, d.y_tops, d.color || this.colors[i]);\n\t\t\tthis.make_new_units(d, i);\n\t\t});\n\n\t\tsetTimeout(() => {\n\t\t\tthis.update_values(data);\n\t\t}, 350);\n\t}\n\n\tsetup_navigation(init) {\n\t\t// Hack: defer nav till initial update_values\n\t\tsetTimeout(() => {\n\t\t\tsuper.setup_navigation(init);\n\t\t}, 500);\n\t}\n\n\tmake_new_units(d, i) {\n\t\tthis.make_new_units_for_dataset(\n\t\t\tthis.x_axis_positions,\n\t\t\td.y_tops,\n\t\t\td.color || this.colors[i],\n\t\t\ti,\n\t\t\tthis.y.length\n\t\t);\n\t}\n\n\tmake_new_units_for_dataset(x_values, y_values, color, dataset_index, no_of_datasets, group, array, unit) {\n\t\tif(!group) group = this.svg_units_groups[dataset_index];\n\t\tif(!array) array = this.y[dataset_index].svg_units;\n\t\tif(!unit) unit = this.unit_args;\n\n\t\tgroup.textContent = '';\n\t\tarray.length = 0;\n\n\t\ty_values.map((y, i) => {\n\t\t\tlet data_unit = this.draw[unit.type](\n\t\t\t\tx_values[i],\n\t\t\t\ty,\n\t\t\t\tunit.args,\n\t\t\t\tcolor,\n\t\t\t\tdataset_index,\n\t\t\t\tno_of_datasets\n\t\t\t);\n\t\t\tgroup.appendChild(data_unit);\n\t\t\tarray.push(data_unit);\n\t\t});\n\t}\n\n\tmake_y_specifics() {\n\t\tthis.specific_y_group.textContent = '';\n\t\tthis.specific_values.map(d => {\n\t\t\tthis.specific_y_group.appendChild(\n\t\t\t\tthis.make_y_line(\n\t\t\t\t\t0,\n\t\t\t\t\tthis.width,\n\t\t\t\t\tthis.width + 5,\n\t\t\t\t\td.title.toUpperCase(),\n\t\t\t\t\t'specific-value',\n\t\t\t\t\t'specific-value',\n\t\t\t\t\tthis.zero_line - d.value * this.multiplier,\n\t\t\t\t\tfalse,\n\t\t\t\t\td.line_type\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t}\n\n\tbind_tooltip() {\n\t\t// TODO: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.chart_wrapper.addEventListener('mousemove', (e) => {\n\t\t\tlet offset = $.offset(this.chart_wrapper);\n\t\t\tlet relX = e.pageX - offset.left - this.translate_x;\n\t\t\tlet relY = e.pageY - offset.top - this.translate_y;\n\n\t\t\tif(relY < this.height + this.translate_y * 2) {\n\t\t\t\tthis.map_tooltip_x_position_and_show(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hide_tip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmap_tooltip_x_position_and_show(relX) {\n\t\tfor(var i=this.x_axis_positions.length - 1; i >= 0 ; i--) {\n\t\t\tlet x_val = this.x_axis_positions[i];\n\t\t\t// let delta = i === 0 ? this.avg_unit_width : x_val - this.x_axis_positions[i-1];\n\t\t\tif(relX > x_val - this.avg_unit_width/2) {\n\t\t\t\tlet x = x_val + this.translate_x;\n\t\t\t\tlet y = this.y_min_tops[i] + this.translate_y;\n\n\t\t\t\tlet title = this.x.formatted && this.x.formatted.length>0\n\t\t\t\t\t? this.x.formatted[i] : this.x[i];\n\t\t\t\tlet values = this.y.map((set, j) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: set.title,\n\t\t\t\t\t\tvalue: set.formatted ? set.formatted[i] : set.values[i],\n\t\t\t\t\t\tcolor: set.color || this.colors[j],\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\t// TODO: upside-down tooltips for negative values?\n\t\t\t\tthis.tip.set_values(x, y, title, '', values);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// API\n\tshow_sums() {\n\t\tthis.updating = true;\n\n\t\tthis.y_sums = new Array(this.x_axis_positions.length).fill(0);\n\t\tthis.y.map(d => {\n\t\t\td.values.map( (value, i) => {\n\t\t\t\tthis.y_sums[i] += value;\n\t\t\t});\n\t\t});\n\n\t\t// Remake y axis, animate\n\t\tthis.update_values();\n\n\t\t// Then make sum units, don't animate\n\t\tthis.sum_units = [];\n\n\t\tthis.make_new_units_for_dataset(\n\t\t\tthis.x_axis_positions,\n\t\t\tthis.y_sums.map( val => float_2(this.zero_line - val * this.multiplier)),\n\t\t\t'light-grey',\n\t\t\t0,\n\t\t\t1,\n\t\t\tthis.sum_group,\n\t\t\tthis.sum_units\n\t\t);\n\n\t\t// this.make_path && this.make_path(d, i, old_x, old_y, d.color || this.colors[i]);\n\n\t\tthis.updating = false;\n\t}\n\n\thide_sums() {\n\t\tif(this.updating) return;\n\t\tthis.y_sums = [];\n\t\tthis.sum_group.textContent = '';\n\t\tthis.sum_units = [];\n\t\tthis.update_values();\n\t}\n\n\tshow_average() {\n\t\tthis.old_specific_values = this.specific_values.slice();\n\t\tthis.y.map((d, i) => {\n\t\t\tlet sum = 0;\n\t\t\td.values.map(e => {sum+=e;});\n\t\t\tlet average = sum/d.values.length;\n\n\t\t\tthis.specific_values.push({\n\t\t\t\ttitle: \"AVG\" + \" \" + (i+1),\n\t\t\t\tline_type: \"dashed\",\n\t\t\t\tvalue: average,\n\t\t\t\tauto: 1\n\t\t\t});\n\t\t});\n\n\t\tthis.update_values();\n\t}\n\n\thide_average() {\n\t\tthis.old_specific_values = this.specific_values.slice();\n\n\t\tlet indices_to_remove = [];\n\t\tthis.specific_values.map((d, i) => {\n\t\t\tif(d.auto) indices_to_remove.unshift(i);\n\t\t});\n\n\t\tindices_to_remove.map(index => {\n\t\t\tthis.specific_values.splice(index, 1);\n\t\t});\n\n\t\tthis.update_values();\n\t}\n\n\tupdate_values(new_y, new_x) {\n\t\tif(!new_x) {\n\t\t\tnew_x = this.x;\n\t\t}\n\t\tthis.elements_to_animate = [];\n\t\tthis.updating = true;\n\n\t\tthis.old_x_values = this.x.slice();\n\t\tthis.old_y_axis_tops = this.y.map(d => d.y_tops.slice());\n\n\t\tthis.old_y_values = this.y.map(d => d.values);\n\n\t\tthis.no_of_extra_pts = new_x.length - this.x.length;\n\n\t\t// Just update values prop, setup_x/y() will do the rest\n\t\tif(new_y) this.y.map((d, i) => {d.values = new_y[i].values;});\n\t\tif(new_x) this.x = new_x;\n\n\t\tthis.setup_x();\n\t\tthis.setup_y();\n\n\t\t// Animate only if positions have changed\n\t\tif(!arrays_equal(this.x_old_axis_positions, this.x_axis_positions)) {\n\t\t\tthis.make_x_axis(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tif(!this.updating) this.make_x_axis();\n\t\t\t}, 300);\n\t\t}\n\n\t\tif(!arrays_equal(this.y_old_axis_values, this.y_axis_values) ||\n\t\t\t(this.old_specific_values &&\n\t\t\t!arrays_equal(this.old_specific_values, this.specific_values))) {\n\n\t\t\tthis.make_y_axis(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tif(!this.updating) {\n\t\t\t\t\tthis.make_y_axis();\n\t\t\t\t\tthis.make_y_specifics();\n\t\t\t\t}\n\t\t\t}, 300);\n\t\t}\n\n\t\t// Change in data, so calculate dependencies\n\t\tthis.calc_y_dependencies();\n\n\t\tthis.animate_graphs();\n\n\t\t// Trigger animation with the animatable elements in this.elements_to_animate\n\t\tthis.run_animation();\n\n\t\tthis.updating = false;\n\t}\n\n\tadd_data_point(y_point, x_point, index=this.x.length) {\n\t\tlet new_y = this.y.map(data_set => { return {values:data_set.values}; });\n\t\tnew_y.map((d, i) => { d.values.splice(index, 0, y_point[i]); });\n\t\tlet new_x = this.x.slice();\n\t\tnew_x.splice(index, 0, x_point);\n\n\t\tthis.update_values(new_y, new_x);\n\t}\n\n\tremove_data_point(index = this.x.length-1) {\n\t\tif(this.x.length < 3) return;\n\n\t\tlet new_y = this.y.map(data_set => { return {values:data_set.values}; });\n\t\tnew_y.map((d) => { d.values.splice(index, 1); });\n\t\tlet new_x = this.x.slice();\n\t\tnew_x.splice(index, 1);\n\n\t\tthis.update_values(new_y, new_x);\n\t}\n\n\trun_animation() {\n\t\tlet anim_svg = $.runSVGAnimation(this.svg, this.elements_to_animate);\n\n\t\tif(this.svg.parentNode == this.chart_wrapper) {\n\t\t\tthis.chart_wrapper.removeChild(this.svg);\n\t\t\tthis.chart_wrapper.appendChild(anim_svg);\n\n\t\t}\n\n\t\t// Replace the new svg (data has long been replaced)\n\t\tsetTimeout(() => {\n\t\t\tif(anim_svg.parentNode == this.chart_wrapper) {\n\t\t\t\tthis.chart_wrapper.removeChild(anim_svg);\n\t\t\t\tthis.chart_wrapper.appendChild(this.svg);\n\t\t\t}\n\t\t}, 200);\n\t}\n\n\tanimate_graphs() {\n\t\tthis.y.map((d, i) => {\n\t\t\t// Pre-prep, equilize no of positions between old and new\n\t\t\tlet [old_x, old_y, new_x, new_y] = this.calc_old_and_new_postions(d, i);\n\t\t\tif(this.no_of_extra_pts >= 0) {\n\t\t\t\tthis.make_path && this.make_path(d, i, old_x, old_y, d.color || this.colors[i]);\n\t\t\t\tthis.make_new_units_for_dataset(old_x, old_y, d.color || this.colors[i], i, this.y.length);\n\t\t\t}\n\t\t\td.path && this.animate_path(d, i, old_x, old_y, new_x, new_y);\n\t\t\tthis.animate_units(d, i, old_x, old_y, new_x, new_y);\n\t\t});\n\n\t\t// TODO: replace with real units\n\t\tsetTimeout(() => {\n\t\t\tthis.y.map((d, i) => {\n\t\t\t\tthis.make_path && this.make_path(d, i, this.x_axis_positions, d.y_tops, d.color || this.colors[i]);\n\t\t\t\tthis.make_new_units(d, i);\n\t\t\t});\n\t\t}, 300);\n\t}\n\n\tanimate_path(d, i, old_x, old_y, new_x, new_y) {\n\t\t// Animate path\n\t\tconst new_points_list = new_y.map((y, i) => (new_x[i] + ',' + y));\n\t\tconst new_path_str = new_points_list.join(\"L\");\n\n\t\tconst path_args = [{unit: d.path, object: d, key: 'path'}, {d:\"M\"+new_path_str}, 250, \"easein\"];\n\t\tthis.elements_to_animate.push(path_args);\n\n\t\t// Animate region\n\t\tif(d.region_path) {\n\t\t\tlet reg_start_pt = `0,${this.zero_line}L`;\n\t\t\tlet reg_end_pt = `L${this.width},${this.zero_line}`;\n\n\t\t\tconst region_args = [\n\t\t\t\t{unit: d.region_path, object: d, key: 'region_path'},\n\t\t\t\t{d:\"M\" + reg_start_pt + new_path_str + reg_end_pt},\n\t\t\t\t250,\n\t\t\t\t\"easein\"\n\t\t\t];\n\t\t\tthis.elements_to_animate.push(region_args);\n\t\t}\n\t}\n\n\tanimate_units(d, index, old_x, old_y, new_x, new_y) {\n\t\tlet type = this.unit_args.type;\n\n\t\td.svg_units.map((unit, i) => {\n\t\t\tthis.elements_to_animate.push(this.animate[type](\n\t\t\t\t{unit:unit, array:d.svg_units, index: i}, // unit, with info to replace where it came from in the data\n\t\t\t\tnew_x[i],\n\t\t\t\tnew_y[i],\n\t\t\t\tindex\n\t\t\t));\n\t\t});\n\t}\n\n\tcalc_old_and_new_postions(d, i) {\n\t\tlet old_x = this.x_old_axis_positions.slice();\n\t\tlet new_x = this.x_axis_positions.slice();\n\n\t\tlet old_y = this.old_y_axis_tops[i].slice();\n\t\tlet new_y = d.y_tops.slice();\n\n\t\tconst last_old_x_pos = old_x[old_x.length - 1];\n\t\tconst last_old_y_pos = old_y[old_y.length - 1];\n\n\t\tconst last_new_x_pos = new_x[new_x.length - 1];\n\t\tconst last_new_y_pos = new_y[new_y.length - 1];\n\n\t\tif(this.no_of_extra_pts >= 0) {\n\t\t\t// First substitute current path with a squiggled one (looking the same but\n\t\t\t// having more points at end),\n\t\t\t// then animate to stretch it later to new points\n\t\t\t// (new points already have more points)\n\n\t\t\t// Hence, the extra end points will correspond to current(old) positions\n\t\t\tlet filler_x = new Array(Math.abs(this.no_of_extra_pts)).fill(last_old_x_pos);\n\t\t\tlet filler_y = new Array(Math.abs(this.no_of_extra_pts)).fill(last_old_y_pos);\n\n\t\t\told_x = old_x.concat(filler_x);\n\t\t\told_y = old_y.concat(filler_y);\n\n\t\t} else {\n\t\t\t// Just modify the new points to have extra points\n\t\t\t// with the same position at end\n\t\t\tlet filler_x = new Array(Math.abs(this.no_of_extra_pts)).fill(last_new_x_pos);\n\t\t\tlet filler_y = new Array(Math.abs(this.no_of_extra_pts)).fill(last_new_y_pos);\n\n\t\t\tnew_x = new_x.concat(filler_x);\n\t\t\tnew_y = new_y.concat(filler_y);\n\t\t}\n\n\t\treturn [old_x, old_y, new_x, new_y];\n\t}\n\n\tmake_anim_x_axis(height, text_start_at, axis_line_class) {\n\t\t// Animate X AXIS to account for more or less axis lines\n\n\t\tconst old_pos = this.x_old_axis_positions;\n\t\tconst new_pos = this.x_axis_positions;\n\n\t\tconst old_vals = this.old_x_values;\n\t\tconst new_vals = this.x;\n\n\t\tconst last_line_pos = old_pos[old_pos.length - 1];\n\n\t\tlet add_and_animate_line = (value, old_pos, new_pos) => {\n\t\t\tconst x_line = this.make_x_line(\n\t\t\t\theight,\n\t\t\t\ttext_start_at,\n\t\t\t\tvalue, // new value\n\t\t\t\t'x-value-text',\n\t\t\t\taxis_line_class,\n\t\t\t\told_pos // old position\n\t\t\t);\n\t\t\tthis.x_axis_group.appendChild(x_line);\n\n\t\t\tthis.elements_to_animate && this.elements_to_animate.push([\n\t\t\t\t{unit: x_line, array: [0], index: 0},\n\t\t\t\t{transform: `${ new_pos }, 0`},\n\t\t\t\t250,\n\t\t\t\t\"easein\",\n\t\t\t\t\"translate\",\n\t\t\t\t{transform: `${ old_pos }, 0`}\n\t\t\t]);\n\t\t};\n\n\t\tthis.x_axis_group.textContent = '';\n\n\t\tthis.make_new_axis_anim_lines(\n\t\t\told_pos,\n\t\t\tnew_pos,\n\t\t\told_vals,\n\t\t\tnew_vals,\n\t\t\tlast_line_pos,\n\t\t\tadd_and_animate_line\n\t\t);\n\t}\n\n\tmake_anim_y_axis() {\n\t\t// Animate Y AXIS to account for more or less axis lines\n\n\t\tconst old_pos = this.y_old_axis_values.map(value =>\n\t\t\tthis.zero_line - value * this.multiplier);\n\t\tconst new_pos = this.y_axis_values.map(value =>\n\t\t\tthis.zero_line - value * this.multiplier);\n\n\t\tconst old_vals = this.y_old_axis_values;\n\t\tconst new_vals = this.y_axis_values;\n\n\t\tconst last_line_pos = old_pos[old_pos.length - 1];\n\n\t\tthis.y_axis_group.textContent = '';\n\n\t\tthis.make_new_axis_anim_lines(\n\t\t\told_pos,\n\t\t\tnew_pos,\n\t\t\told_vals,\n\t\t\tnew_vals,\n\t\t\tlast_line_pos,\n\t\t\tthis.add_and_animate_y_line.bind(this),\n\t\t\tthis.y_axis_group\n\t\t);\n\t}\n\n\tmake_anim_y_specifics() {\n\t\tthis.specific_y_group.textContent = '';\n\t\tthis.specific_values.map((d) => {\n\t\t\tthis.add_and_animate_y_line(\n\t\t\t\td.title,\n\t\t\t\tthis.old_zero_line - d.value * this.old_multiplier,\n\t\t\t\tthis.zero_line - d.value * this.multiplier,\n\t\t\t\t0,\n\t\t\t\tthis.specific_y_group,\n\t\t\t\td.line_type,\n\t\t\t\ttrue\n\t\t\t);\n\t\t});\n\t}\n\n\tmake_new_axis_anim_lines(old_pos, new_pos, old_vals, new_vals, last_line_pos, add_and_animate_line, group) {\n\t\tlet superimposed_positions, superimposed_values;\n\t\tlet no_of_extras = new_vals.length - old_vals.length;\n\t\tif(no_of_extras > 0) {\n\t\t\t// More axis are needed\n\t\t\t// First make only the superimposed (same position) ones\n\t\t\t// Add in the extras at the end later\n\t\t\tsuperimposed_positions = new_pos.slice(0, old_pos.length);\n\t\t\tsuperimposed_values = new_vals.slice(0, old_vals.length);\n\t\t} else {\n\t\t\t// Axis have to be reduced\n\t\t\t// Fake it by moving all current extra axis to the last position\n\t\t\t// You'll need filler positions and values in the new arrays\n\t\t\tconst filler_vals = new Array(Math.abs(no_of_extras)).fill(\"\");\n\t\t\tsuperimposed_values = new_vals.concat(filler_vals);\n\n\t\t\tconst filler_pos = new Array(Math.abs(no_of_extras)).fill(last_line_pos);\n\t\t\tsuperimposed_positions = new_pos.concat(filler_pos);\n\t\t}\n\n\t\tsuperimposed_values.map((value, i) => {\n\t\t\tadd_and_animate_line(value, old_pos[i], superimposed_positions[i], i, group);\n\t\t});\n\n\t\tif(no_of_extras > 0) {\n\t\t\t// Add in extra axis in the end\n\t\t\t// and then animate to new positions\n\t\t\tconst extra_values = new_vals.slice(old_vals.length);\n\t\t\tconst extra_positions = new_pos.slice(old_pos.length);\n\n\t\t\textra_values.map((value, i) => {\n\t\t\t\tadd_and_animate_line(value, last_line_pos, extra_positions[i], i, group);\n\t\t\t});\n\t\t}\n\t}\n\n\tmake_x_line(height, text_start_at, point, label_class, axis_line_class, x_pos) {\n\t\tlet allowed_space = this.avg_unit_width * 1.5;\n\n\t\tif(this.get_strwidth(point) > allowed_space) {\n\t\t\tlet allowed_letters = allowed_space / 8;\n\t\t\tpoint = point.slice(0, allowed_letters-3) + \" ...\";\n\t\t}\n\n\t\tlet line = $.createSVG('line', {\n\t\t\tx1: 0,\n\t\t\tx2: 0,\n\t\t\ty1: 0,\n\t\t\ty2: height\n\t\t});\n\n\t\tlet text = $.createSVG('text', {\n\t\t\tclassName: label_class,\n\t\t\tx: 0,\n\t\t\ty: text_start_at,\n\t\t\tdy: '.71em',\n\t\t\tinnerHTML: point\n\t\t});\n\n\t\tlet x_level = $.createSVG('g', {\n\t\t\tclassName: `tick ${axis_line_class}`,\n\t\t\ttransform: `translate(${ x_pos }, 0)`\n\t\t});\n\n\t\tx_level.appendChild(line);\n\t\tx_level.appendChild(text);\n\n\t\treturn x_level;\n\t}\n\n\tmake_y_line(start_at, width, text_end_at, point, label_class, axis_line_class, y_pos, darker=false, line_type=\"\") {\n\t\tlet line = $.createSVG('line', {\n\t\t\tclassName: line_type === \"dashed\" ? \"dashed\": \"\",\n\t\t\tx1: start_at,\n\t\t\tx2: width,\n\t\t\ty1: 0,\n\t\t\ty2: 0\n\t\t});\n\n\t\tlet text = $.createSVG('text', {\n\t\t\tclassName: label_class,\n\t\t\tx: text_end_at,\n\t\t\ty: 0,\n\t\t\tdy: '.32em',\n\t\t\tinnerHTML: point+\"\"\n\t\t});\n\n\t\tlet y_level = $.createSVG('g', {\n\t\t\tclassName: `tick ${axis_line_class}`,\n\t\t\ttransform: `translate(0, ${y_pos})`\n\t\t});\n\n\t\tif(darker) {\n\t\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t\t}\n\n\t\ty_level.appendChild(line);\n\t\ty_level.appendChild(text);\n\n\t\treturn y_level;\n\t}\n\n\tadd_and_animate_y_line(value, old_pos, new_pos, i, group, type, specific=false) {\n\t\tlet [width, text_end_at, axis_line_class, start_at] = this.get_y_axis_line_props(specific);\n\t\tlet axis_label_class = !specific ? 'y-value-text' : 'specific-value';\n\t\tvalue = !specific ? value : (value+\"\").toUpperCase();\n\t\tconst y_line = this.make_y_line(\n\t\t\tstart_at,\n\t\t\twidth,\n\t\t\ttext_end_at,\n\t\t\tvalue,\n\t\t\taxis_label_class,\n\t\t\taxis_line_class,\n\t\t\told_pos,  // old position\n\t\t\t(value === 0 && i !== 0), // Non-first Zero line\n\t\t\ttype\n\t\t);\n\n\t\tgroup.appendChild(y_line);\n\n\t\tthis.elements_to_animate && this.elements_to_animate.push([\n\t\t\t{unit: y_line, array: [0], index: 0},\n\t\t\t{transform: `0, ${ new_pos }`},\n\t\t\t250,\n\t\t\t\"easein\",\n\t\t\t\"translate\",\n\t\t\t{transform: `0, ${ old_pos }`}\n\t\t]);\n\t}\n\n\tget_y_axis_points(array) {\n\t\t//*** Where the magic happens ***\n\n\t\t// Calculates best-fit y intervals from given values\n\t\t// and returns the interval array\n\n\t\t// TODO: Fractions\n\n\t\tlet max_bound, min_bound, pos_no_of_parts, neg_no_of_parts, part_size; // eslint-disable-line no-unused-vars\n\n\t\t// Critical values\n\t\tlet max_val = parseInt(Math.max(...array));\n\t\tlet min_val = parseInt(Math.min(...array));\n\t\tif(min_val >= 0) {\n\t\t\tmin_val = 0;\n\t\t}\n\n\t\tlet get_params = (value1, value2) => {\n\t\t\tlet bound1, bound2, no_of_parts_1, no_of_parts_2, interval_size;\n\t\t\tif((value1+\"\").length <= 1) {\n\t\t\t\t[bound1, no_of_parts_1] = [10, 5];\n\t\t\t} else {\n\t\t\t\t[bound1, no_of_parts_1] = this.calc_upper_bound_and_no_of_parts(value1);\n\t\t\t}\n\n\t\t\tinterval_size = bound1 / no_of_parts_1;\n\t\t\tno_of_parts_2 = this.calc_no_of_parts(value2, interval_size);\n\t\t\tbound2 = no_of_parts_2 * interval_size;\n\n\t\t\treturn [bound1, bound2, no_of_parts_1, no_of_parts_2, interval_size];\n\t\t};\n\n\t\tconst abs_min_val = min_val * -1;\n\t\tif(abs_min_val <= max_val) {\n\t\t\t// Get the positive region intervals\n\t\t\t// then calc negative ones accordingly\n\t\t\t[max_bound, min_bound, pos_no_of_parts, neg_no_of_parts, part_size]\n\t\t\t\t= get_params(max_val, abs_min_val);\n\t\t\tif(abs_min_val === 0) {\n\t\t\t\tmin_bound = 0; neg_no_of_parts = 0;\n\t\t\t}\n\t\t} else {\n\t\t\t// Get the negative region here first\n\t\t\t[min_bound, max_bound, neg_no_of_parts, pos_no_of_parts, part_size]\n\t\t\t\t= get_params(abs_min_val, max_val);\n\t\t}\n\n\t\t// Make both region parts even\n\t\tif(pos_no_of_parts % 2 !== 0 && neg_no_of_parts > 0) pos_no_of_parts++;\n\t\tif(neg_no_of_parts % 2 !== 0) {\n\t\t\t// every increase in no_of_parts entails an increase in corresponding bound\n\t\t\t// except here, it happens implicitly after every calc_no_of_parts() call\n\t\t\tneg_no_of_parts++;\n\t\t\tmin_bound += part_size;\n\t\t}\n\n\t\tlet no_of_parts = pos_no_of_parts + neg_no_of_parts;\n\t\tif(no_of_parts > 5) {\n\t\t\tno_of_parts /= 2;\n\t\t\tpart_size *= 2;\n\t\t}\n\n\t\treturn this.get_intervals(\n\t\t\t(-1) * min_bound,\n\t\t\tpart_size,\n\t\t\tno_of_parts\n\t\t);\n\t}\n\n\tget_intervals(start, interval_size, count) {\n\t\tlet intervals = [];\n\t\tfor(var i = 0; i <= count; i++){\n\t\t\tintervals.push(start);\n\t\t\tstart += interval_size;\n\t\t}\n\t\treturn intervals;\n\t}\n\n\tcalc_upper_bound_and_no_of_parts(max_val) {\n\t\t// Given a positive value, calculates a nice-number upper bound\n\t\t// and a consequent optimal number of parts\n\n\t\tconst part_size = Math.pow(10, ((max_val+\"\").length - 1));\n\t\tconst no_of_parts = this.calc_no_of_parts(max_val, part_size);\n\n\t\t// Use it to get a nice even upper bound\n\t\tconst upper_bound = part_size * no_of_parts;\n\n\t\treturn [upper_bound, no_of_parts];\n\t}\n\n\tcalc_no_of_parts(value, divisor) {\n\t\t// value should be a positive number, divisor should be greater than 0\n\t\t// returns an even no of parts\n\t\tlet no_of_parts = Math.ceil(value / divisor);\n\t\tif(no_of_parts % 2 !== 0) no_of_parts++; // Make it an even number\n\n\t\treturn no_of_parts;\n\t}\n\n\tget_optimal_no_of_parts(no_of_parts) {\n\t\t// aka Divide by 2 if too large\n\t\treturn (no_of_parts < 5) ? no_of_parts : no_of_parts / 2;\n\t}\n\n\tset_avg_unit_width_and_x_offset() {\n\t\t// Set the ... you get it\n\t\tthis.avg_unit_width = this.width/(this.x.length - 1);\n\t\tthis.x_offset = 0;\n\t}\n\n\tget_all_y_values() {\n\t\tlet all_values = [];\n\n\t\t// Add in all the y values in the datasets\n\t\tthis.y.map(d => {\n\t\t\tall_values = all_values.concat(d.values);\n\t\t});\n\n\t\t// Add in all the specific values\n\t\treturn all_values.concat(this.specific_values.map(d => d.value));\n\t}\n\n\tcalc_y_dependencies() {\n\t\tthis.y_min_tops = new Array(this.x_axis_positions.length).fill(9999);\n\t\tthis.y.map(d => {\n\t\t\td.y_tops = d.values.map( val => float_2(this.zero_line - val * this.multiplier));\n\t\t\td.y_tops.map( (y_top, i) => {\n\t\t\t\tif(y_top < this.y_min_tops[i]) {\n\t\t\t\t\tthis.y_min_tops[i] = y_top;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tget_bar_height_and_y_attr(y_top) {\n\t\tlet height, y;\n\t\tif (y_top <= this.zero_line) {\n\t\t\theight = this.zero_line - y_top;\n\t\t\ty = y_top;\n\n\t\t\t// In case of invisible bars\n\t\t\tif(height === 0) {\n\t\t\t\theight = this.height * 0.01;\n\t\t\t\ty -= height;\n\t\t\t}\n\t\t} else {\n\t\t\theight = y_top - this.zero_line;\n\t\t\ty = this.zero_line;\n\n\t\t\t// In case of invisible bars\n\t\t\tif(height === 0) {\n\t\t\t\theight = this.height * 0.01;\n\t\t\t}\n\t\t}\n\n\t\treturn [height, y];\n\t}\n\n\tsetup_utils() {\n\t\tthis.draw = {\n\t\t\t'bar': (x, y_top, args, color, index, no_of_datasets) => {\n\t\t\t\tlet total_width = this.avg_unit_width - args.space_width;\n\t\t\t\tlet start_x = x - total_width/2;\n\n\t\t\t\tlet width = total_width / no_of_datasets;\n\t\t\t\tlet current_x = start_x + width * index;\n\n\t\t\t\tlet [height, y] = this.get_bar_height_and_y_attr(y_top);\n\n\t\t\t\treturn $.createSVG('rect', {\n\t\t\t\t\tclassName: `bar mini fill ${color}`,\n\t\t\t\t\tx: current_x,\n\t\t\t\t\ty: y,\n\t\t\t\t\twidth: width,\n\t\t\t\t\theight: height\n\t\t\t\t});\n\n\t\t\t},\n\t\t\t'dot': (x, y, args, color) => {\n\t\t\t\treturn $.createSVG('circle', {\n\t\t\t\t\tclassName: `fill ${color}`,\n\t\t\t\t\tcx: x,\n\t\t\t\t\tcy: y,\n\t\t\t\t\tr: args.radius\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tthis.animate = {\n\t\t\t'bar': (bar_obj, x, y_top, index) => {\n\t\t\t\tlet start = x - this.avg_unit_width/4;\n\t\t\t\tlet width = (this.avg_unit_width/2)/this.y.length;\n\t\t\t\tlet [height, y] = this.get_bar_height_and_y_attr(y_top);\n\n\t\t\t\tx = start + (width * index);\n\n\t\t\t\treturn [bar_obj, {width: width, height: height, x: x, y: y}, 250, \"easein\"];\n\t\t\t\t// bar.animate({height: args.new_height, y: y_top}, 250, mina.easein);\n\t\t\t},\n\t\t\t'dot': (dot_obj, x, y_top) => {\n\t\t\t\treturn [dot_obj, {cx: x, cy: y_top}, 300, \"easein\"];\n\t\t\t\t// dot.animate({cy: y_top}, 250, mina.easein);\n\t\t\t}\n\t\t};\n\t}\n}\n","import AxisChart from './AxisChart';\n\nexport default class BarChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.type = 'bar';\n\t\tthis.x_axis_mode = args.x_axis_mode || 'tick';\n\t\tthis.y_axis_mode = args.y_axis_mode || 'span';\n\t\tthis.setup();\n\t}\n\n\tsetup_values() {\n\t\tsuper.setup_values();\n\t\tthis.x_offset = this.avg_unit_width;\n\t\tthis.unit_args = {\n\t\t\ttype: 'bar',\n\t\t\targs: {\n\t\t\t\tspace_width: this.avg_unit_width/2,\n\t\t\t}\n\t\t};\n\t}\n\n\tmake_overlay() {\n\t\t// Just make one out of the first element\n\t\tlet index = this.x.length - 1;\n\t\tlet unit = this.y[0].svg_units[index];\n\t\tthis.update_current_data_point(index);\n\n\t\tif(this.overlay) {\n\t\t\tthis.overlay.parentNode.removeChild(this.overlay);\n\t\t}\n\n\t\tthis.overlay = unit.cloneNode();\n\t\tthis.overlay.style.fill = '#000000';\n\t\tthis.overlay.style.opacity = '0.4';\n\t\tthis.draw_area.appendChild(this.overlay);\n\t}\n\n\tbind_overlay() {\n\t\t// on event, update overlay\n\t\tthis.parent.addEventListener('data-select', (e) => {\n\t\t\tthis.update_overlay(e.svg_unit);\n\t\t});\n\t}\n\n\tupdate_overlay(unit) {\n\t\tlet attributes = [];\n\t\tObject.keys(unit.attributes).map(index => {\n\t\t\tattributes.push(unit.attributes[index]);\n\t\t});\n\n\t\tattributes.filter(attr => attr.specified).map(attr => {\n\t\t\tthis.overlay.setAttribute(attr.name, attr.nodeValue);\n\t\t});\n\t}\n\n\ton_left_arrow() {\n\t\tthis.update_current_data_point(this.current_index - 1);\n\t}\n\n\ton_right_arrow() {\n\t\tthis.update_current_data_point(this.current_index + 1);\n\t}\n\n\tset_avg_unit_width_and_x_offset() {\n\t\tthis.avg_unit_width = this.width/(this.x.length + 1);\n\t\tthis.x_offset = this.avg_unit_width;\n\t}\n}\n","import AxisChart from './AxisChart';\nimport $ from '../helpers/dom';\n\nexport default class LineChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tif(Object.getPrototypeOf(this) !== LineChart.prototype) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.type = 'line';\n\t\tthis.region_fill = args.region_fill;\n\t\tthis.x_axis_mode = args.x_axis_mode || 'span';\n\t\tthis.y_axis_mode = args.y_axis_mode || 'span';\n\n\t\tthis.setup();\n\t}\n\n\tsetup_graph_components() {\n\t\tthis.setup_path_groups();\n\t\tsuper.setup_graph_components();\n\t}\n\n\tsetup_path_groups() {\n\t\tthis.paths_groups = [];\n\t\tthis.y.map((d, i) => {\n\t\t\tthis.paths_groups[i] = $.createSVG('g', {\n\t\t\t\tclassName: 'path-group path-group-' + i,\n\t\t\t\tinside: this.draw_area\n\t\t\t});\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tsuper.setup_values();\n\t\tthis.unit_args = {\n\t\t\ttype: 'dot',\n\t\t\targs: { radius: 8 }\n\t\t};\n\t}\n\n\tmake_paths() {\n\t\tthis.y.map((d, i) => {\n\t\t\tthis.make_path(d, i, this.x_axis_positions, d.y_tops, d.color || this.colors[i]);\n\t\t});\n\t}\n\n\tmake_path(d, i, x_positions, y_positions, color) {\n\t\tlet points_list = y_positions.map((y, i) => (x_positions[i] + ',' + y));\n\t\tlet points_str = points_list.join(\"L\");\n\n\t\tthis.paths_groups[i].textContent = '';\n\n\t\td.path = $.createSVG('path', {\n\t\t\tinside: this.paths_groups[i],\n\t\t\tclassName: `stroke ${color}`,\n\t\t\td: \"M\"+points_str\n\t\t});\n\n\t\tif(this.region_fill) {\n\t\t\tlet gradient_id ='path-fill-gradient' + '-' + color;\n\n\t\t\tthis.gradient_def = $.createSVG('linearGradient', {\n\t\t\t\tinside: this.svg_defs,\n\t\t\t\tid: gradient_id,\n\t\t\t\tx1: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty1: 0,\n\t\t\t\ty2: 1\n\t\t\t});\n\n\t\t\tlet set_gradient_stop = (grad_elem, offset, color, opacity) => {\n\t\t\t\t$.createSVG('stop', {\n\t\t\t\t\t'className': 'stop-color ' + color,\n\t\t\t\t\t'inside': grad_elem,\n\t\t\t\t\t'offset': offset,\n\t\t\t\t\t'stop-opacity': opacity\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tset_gradient_stop(this.gradient_def, \"0%\", color, 0.4);\n\t\t\tset_gradient_stop(this.gradient_def, \"50%\", color, 0.2);\n\t\t\tset_gradient_stop(this.gradient_def, \"100%\", color, 0);\n\n\t\t\td.region_path = $.createSVG('path', {\n\t\t\t\tinside: this.paths_groups[i],\n\t\t\t\tclassName: `region-fill`,\n\t\t\t\td: \"M\" + `0,${this.zero_line}L` + points_str + `L${this.width},${this.zero_line}`,\n\t\t\t});\n\n\t\t\td.region_path.style.stroke = \"none\";\n\t\t\td.region_path.style.fill = `url(#${gradient_id})`;\n\t\t}\n\t}\n}\n","import BaseChart from './BaseChart';\nimport $ from '../helpers/dom';\n\nexport default class PercentageChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'percentage';\n\n\t\tthis.get_y_label = this.format_lambdas.y_label;\n\t\tthis.get_x_tooltip = this.format_lambdas.x_tooltip;\n\t\tthis.get_y_tooltip = this.format_lambdas.y_tooltip;\n\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\n\t\tthis.colors = args.colors;\n\n\t\tif(!this.colors || this.colors.length < this.data.labels.length) {\n\t\t\tthis.colors = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t\t\t\t'yellow', 'green', 'light-green', 'purple', 'magenta'];\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\tmake_chart_area() {\n\t\tthis.chart_wrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.chart_wrapper.style.marginTop = '45px';\n\n\t\tthis.stats_wrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.stats_wrapper.style.marginBottom = '30px';\n\t\tthis.stats_wrapper.style.paddingTop = '0px';\n\t}\n\n\tmake_draw_area() {\n\t\tthis.chart_div = $.create('div', {\n\t\t\tclassName: 'div',\n\t\t\tinside: this.chart_wrapper,\n\t\t\twidth: this.base_width,\n\t\t\theight: this.base_height\n\t\t});\n\n\t\tthis.chart = $.create('div', {\n\t\t\tclassName: 'progress-chart',\n\t\t\tinside: this.chart_div\n\t\t});\n\t}\n\n\tsetup_components() {\n\t\tthis.percentage_bar = $.create('div', {\n\t\t\tclassName: 'progress',\n\t\t\tinside: this.chart\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\tsetup_utils() { }\n\n\tmake_graph_components() {\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tthis.slices = [];\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tlet slice = $.create('div', {\n\t\t\t\tclassName: `progress-bar background ${this.colors[i]}`,\n\t\t\t\tstyle: `width: ${total*100/this.grand_total}%`,\n\t\t\t\tinside: this.percentage_bar\n\t\t\t});\n\t\t\tthis.slices.push(slice);\n\t\t});\n\t}\n\n\tbind_tooltip() {\n\t\tthis.slices.map((slice, i) => {\n\t\t\tslice.addEventListener('mouseenter', () => {\n\t\t\t\tlet g_off = $.offset(this.chart_wrapper), p_off = $.offset(slice);\n\n\t\t\t\tlet x = p_off.left - g_off.left + slice.offsetWidth/2;\n\t\t\t\tlet y = p_off.top - g_off.top - 6;\n\t\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\n\t\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\tshow_summary() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.stats_wrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator ${this.colors[i]}\">\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport $ from '../helpers/dom';\n\nexport default class Heatmap extends BaseChart {\n\tconstructor({\n\t\tstart = '',\n\t\tdomain = '',\n\t\tsubdomain = '',\n\t\tdata = {},\n\t\tdiscrete_domains = 0,\n\t\tcount_label = ''\n\t}) {\n\t\tsuper(arguments[0]);\n\n\t\tthis.type = 'heatmap';\n\n\t\tthis.domain = domain;\n\t\tthis.subdomain = subdomain;\n\t\tthis.data = data;\n\t\tthis.discrete_domains = discrete_domains;\n\t\tthis.count_label = count_label;\n\n\t\tlet today = new Date();\n\t\tthis.start = start || this.add_days(today, 365);\n\n\t\tthis.legend_colors = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\n\n\t\tthis.translate_x = 0;\n\t\tthis.setup();\n\t}\n\n\tsetup_base_values() {\n\t\tthis.today = new Date();\n\n\t\tif(!this.start) {\n\t\t\tthis.start = new Date();\n\t\t\tthis.start.setFullYear( this.start.getFullYear() - 1 );\n\t\t}\n\t\tthis.first_week_start = new Date(this.start.toDateString());\n\t\tthis.last_week_start = new Date(this.today.toDateString());\n\t\tif(this.first_week_start.getDay() !== 7) {\n\t\t\tthis.add_days(this.first_week_start, (-1) * this.first_week_start.getDay());\n\t\t}\n\t\tif(this.last_week_start.getDay() !== 7) {\n\t\t\tthis.add_days(this.last_week_start, (-1) * this.last_week_start.getDay());\n\t\t}\n\t\tthis.no_of_cols = this.get_weeks_between(this.first_week_start + '', this.last_week_start + '') + 1;\n\t}\n\n\tset_width() {\n\t\tthis.base_width = (this.no_of_cols) * 12;\n\n\t\tif(this.discrete_domains) {\n\t\t\tthis.base_width += (12 * 12);\n\t\t}\n\t}\n\n\tsetup_components() {\n\t\tthis.domain_label_group = $.createSVG(\"g\", {\n\t\t\tclassName: \"domain-label-group chart-label\",\n\t\t\tinside: this.draw_area\n\t\t});\n\t\tthis.data_groups = $.createSVG(\"g\", {\n\t\t\tclassName: \"data-groups\",\n\t\t\tinside: this.draw_area,\n\t\t\ttransform: `translate(0, 20)`\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tthis.domain_label_group.textContent = '';\n\t\tthis.data_groups.textContent = '';\n\t\tthis.distribution = this.get_distribution(this.data, this.legend_colors);\n\t\tthis.month_names = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t\t];\n\n\t\tthis.render_all_weeks_and_store_x_values(this.no_of_cols);\n\t}\n\n\trender_all_weeks_and_store_x_values(no_of_weeks) {\n\t\tlet current_week_sunday = new Date(this.first_week_start);\n\t\tthis.week_col = 0;\n\t\tthis.current_month = current_week_sunday.getMonth();\n\n\t\tthis.months = [this.current_month + ''];\n\t\tthis.month_weeks = {}, this.month_start_points = [];\n\t\tthis.month_weeks[this.current_month] = 0;\n\t\tthis.month_start_points.push(13);\n\n\t\tfor(var i = 0; i < no_of_weeks; i++) {\n\t\t\tlet data_group, month_change = 0;\n\t\t\tlet day = new Date(current_week_sunday);\n\n\t\t\t[data_group, month_change] = this.get_week_squares_group(day, this.week_col);\n\t\t\tthis.data_groups.appendChild(data_group);\n\t\t\tthis.week_col += 1 + parseInt(this.discrete_domains && month_change);\n\t\t\tthis.month_weeks[this.current_month]++;\n\t\t\tif(month_change) {\n\t\t\t\tthis.current_month = (this.current_month + 1) % 12;\n\t\t\t\tthis.months.push(this.current_month + '');\n\t\t\t\tthis.month_weeks[this.current_month] = 1;\n\t\t\t}\n\t\t\tthis.add_days(current_week_sunday, 7);\n\t\t}\n\t\tthis.render_month_labels();\n\t}\n\n\tget_week_squares_group(current_date, index) {\n\t\tconst no_of_weekdays = 7;\n\t\tconst square_side = 10;\n\t\tconst cell_padding = 2;\n\t\tconst step = 1;\n\n\t\tlet month_change = 0;\n\t\tlet week_col_change = 0;\n\n\t\tlet data_group = $.createSVG(\"g\", {\n\t\t\tclassName: \"data-group\",\n\t\t\tinside: this.data_groups\n\t\t});\n\n\t\tfor(var y = 0, i = 0; i < no_of_weekdays; i += step, y += (square_side + cell_padding)) {\n\t\t\tlet data_value = 0;\n\t\t\tlet color_index = 0;\n\n\t\t\tlet timestamp = Math.floor(current_date.getTime()/1000).toFixed(1);\n\n\t\t\tif(this.data[timestamp]) {\n\t\t\t\tdata_value = this.data[timestamp];\n\t\t\t\tcolor_index = this.get_max_checkpoint(data_value, this.distribution);\n\t\t\t}\n\n\t\t\tif(this.data[Math.round(timestamp)]) {\n\t\t\t\tdata_value = this.data[Math.round(timestamp)];\n\t\t\t\tcolor_index = this.get_max_checkpoint(data_value, this.distribution);\n\t\t\t}\n\n\t\t\tlet x = 13 + (index + week_col_change) * 12;\n\n\t\t\t$.createSVG(\"rect\", {\n\t\t\t\tclassName: 'day',\n\t\t\t\tinside: data_group,\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\twidth: square_side,\n\t\t\t\theight: square_side,\n\t\t\t\tfill:  this.legend_colors[color_index],\n\t\t\t\t'data-date': this.get_dd_mm_yyyy(current_date),\n\t\t\t\t'data-value': data_value,\n\t\t\t\t'data-day': current_date.getDay()\n\t\t\t});\n\n\t\t\tlet next_date = new Date(current_date);\n\t\t\tthis.add_days(next_date, 1);\n\t\t\tif(next_date.getMonth() - current_date.getMonth()) {\n\t\t\t\tmonth_change = 1;\n\t\t\t\tif(this.discrete_domains) {\n\t\t\t\t\tweek_col_change = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.month_start_points.push(13 + (index + week_col_change) * 12);\n\t\t\t}\n\t\t\tcurrent_date = next_date;\n\t\t}\n\n\t\treturn [data_group, month_change];\n\t}\n\n\trender_month_labels() {\n\t\t// this.first_month_label = 1;\n\t\t// if (this.first_week_start.getDate() > 8) {\n\t\t// \tthis.first_month_label = 0;\n\t\t// }\n\t\t// this.last_month_label = 1;\n\n\t\t// let first_month = this.months.shift();\n\t\t// let first_month_start = this.month_start_points.shift();\n\t\t// render first month if\n\n\t\t// let last_month = this.months.pop();\n\t\t// let last_month_start = this.month_start_points.pop();\n\t\t// render last month if\n\n\t\tthis.months.shift();\n\t\tthis.month_start_points.shift();\n\t\tthis.months.pop();\n\t\tthis.month_start_points.pop();\n\n\t\tthis.month_start_points.map((start, i) => {\n\t\t\tlet month_name =  this.month_names[this.months[i]].substring(0, 3);\n\n\t\t\t$.createSVG('text', {\n\t\t\t\tclassName: 'y-value-text',\n\t\t\t\tinside: this.domain_label_group,\n\t\t\t\tx: start + 12,\n\t\t\t\ty: 10,\n\t\t\t\tdy: '.32em',\n\t\t\t\tinnerHTML: month_name\n\t\t\t});\n\n\t\t});\n\t}\n\n\tmake_graph_components() {\n\t\tArray.prototype.slice.call(\n\t\t\tthis.container.querySelectorAll('.graph-stats-container, .sub-title, .title')\n\t\t).map(d => {\n\t\t\td.style.display = 'None';\n\t\t});\n\t\tthis.chart_wrapper.style.marginTop = '0px';\n\t\tthis.chart_wrapper.style.paddingTop = '0px';\n\t}\n\n\tbind_tooltip() {\n\t\tArray.prototype.slice.call(\n\t\t\tdocument.querySelectorAll(\".data-group .day\")\n\t\t).map(el => {\n\t\t\tel.addEventListener('mouseenter', (e) => {\n\t\t\t\tlet count = e.target.getAttribute('data-value');\n\t\t\t\tlet date_parts = e.target.getAttribute('data-date').split('-');\n\n\t\t\t\tlet month = this.month_names[parseInt(date_parts[1])-1].substring(0, 3);\n\n\t\t\t\tlet g_off = this.chart_wrapper.getBoundingClientRect(), p_off = e.target.getBoundingClientRect();\n\n\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\tlet x = p_off.left - g_off.left + (width+2)/2;\n\t\t\t\tlet y = p_off.top - g_off.top - (width+2)/2;\n\t\t\t\tlet value = count + ' ' + this.count_label;\n\t\t\t\tlet name = ' on ' + month + ' ' + date_parts[0] + ', ' + date_parts[2];\n\n\t\t\t\tthis.tip.set_values(x, y, name, value, [], 1);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tthis.data = data;\n\t\tthis.setup_values();\n\t\tthis.bind_tooltip();\n\t}\n\n\tget_distribution(data={}, mapper_array) {\n\t\tlet data_values = Object.keys(data).map(key => data[key]);\n\t\tlet data_max_value = Math.max(...data_values);\n\n\t\tlet distribution_step = 1 / (mapper_array.length - 1);\n\t\tlet distribution = [];\n\n\t\tmapper_array.map((color, i) => {\n\t\t\tlet checkpoint = data_max_value * (distribution_step * i);\n\t\t\tdistribution.push(checkpoint);\n\t\t});\n\n\t\treturn distribution;\n\t}\n\n\tget_max_checkpoint(value, distribution) {\n\t\treturn distribution.filter((d, i) => {\n\t\t\tif(i === 1) {\n\t\t\t\treturn distribution[0] < value;\n\t\t\t}\n\t\t\treturn d <= value;\n\t\t}).length - 1;\n\t}\n\n\t// TODO: date utils, move these out\n\n\t// https://stackoverflow.com/a/11252167/6495043\n\ttreat_as_utc(date_str) {\n\t\tlet result = new Date(date_str);\n\t\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\t\treturn result;\n\t}\n\n\tget_dd_mm_yyyy(date) {\n\t\tlet dd = date.getDate();\n\t\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\t\treturn [\n\t\t\t(dd>9 ? '' : '0') + dd,\n\t\t\t(mm>9 ? '' : '0') + mm,\n\t\t\tdate.getFullYear()\n\t\t].join('-');\n\t}\n\n\tget_weeks_between(start_date_str, end_date_str) {\n\t\treturn Math.ceil(this.get_days_between(start_date_str, end_date_str) / 7);\n\t}\n\n\tget_days_between(start_date_str, end_date_str) {\n\t\tlet milliseconds_per_day = 24 * 60 * 60 * 1000;\n\t\treturn (this.treat_as_utc(end_date_str) - this.treat_as_utc(start_date_str)) / milliseconds_per_day;\n\t}\n\n\t// mutates\n\tadd_days(date, number_of_days) {\n\t\tdate.setDate(date.getDate() + number_of_days);\n\t}\n\n\tget_month_name() {}\n}\n","import BarChart from './charts/BarChart';\nimport LineChart from './charts/LineChart';\nimport PercentageChart from './charts/PercentageChart';\nimport Heatmap from './charts/Heatmap';\n\nexport default class Chart {\n\tconstructor(args) {\n\t\tif(args.type === 'line') {\n\t\t\treturn new LineChart(arguments[0]);\n\t\t} else if(args.type === 'bar') {\n\t\t\treturn new BarChart(arguments[0]);\n\t\t} else if(args.type === 'percentage') {\n\t\t\treturn new PercentageChart(arguments[0]);\n\t\t} else if(args.type === 'heatmap') {\n\t\t\treturn new Heatmap(arguments[0]);\n\t\t} else {\n\t\t\treturn new LineChart(arguments[0]);\n\t\t}\n\t}\n}"],"names":["$","expr","con","document","querySelector","float_2","d","parseFloat","toFixed","arrays_equal","arr1","arr2","length","are_equal","map","i","findNodeIndex","node","previousSibling","create","tag","o","element","createElement","val","appendChild","ref","parentNode","insertBefore","setAttribute","createSVG","createElementNS","runSVGAnimation","svg_container","elements","new_elements","anim_elements","obj","parent","unit","anim_element","new_element","animateSVG","push","replaceChild","array","index","object","key","anim_svg","cloneNode","props","dur","easing_type","type","undefined","old_values","easing","attributeName","animate_element","current_value","getAttribute","value","anim_attr","offset","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","bind","event","callback","split","forEach","addEventListener","unbind","removeEventListener","fire","target","properties","evt","createEvent","initEvent","j","dispatchEvent","SvgTip","title_name","title_value","list_values","title_value_first","x","y","setup","make_tooltip","fill","calc_position","container","this","hide_tip","title","data_point_list","innerHTML","set","li","color","offsetHeight","offsetWidth","max_left","pointer","style","delta","refresh","opacity","BaseChart","height","subtitle","data","format_lambdas","summary","is_navigable","raw_chart_args","arguments","specific_values","current_index","chart_types","set_margins","includes","error","base_height","translate_x","translate_y","bind_window_events","_this","init","setup_base_values","set_width","setup_container","setup_components","setup_values","setup_utils","make_graph_components","show_custom_summary","show_summary","setup_navigation","special_values_width","_this2","get_strwidth","base_width","width","chart_wrapper","stats_wrapper","make_chart_area","make_draw_area","svg","svg_defs","draw_area","tip","bind_tooltip","stats","make_overlay","bind_overlay","e","_this4","keyCode","on_left_arrow","on_right_arrow","on_up_arrow","on_down_arrow","on_enter_key","data_point","data_key","slice","label","get_data_point","string","AxisChart","args","labels","datasets","get_y_label","y_label","get_y_tooltip","y_tooltip","get_x_tooltip","x_tooltip","colors","zero_line","values","isNaN","setup_x","setup_y","set_avg_unit_width_and_x_offset","x_axis_positions","x_old_axis_positions","x_offset","avg_unit_width","y_axis_values","y_old_axis_values","get_all_y_values","y_sums","concat","get_y_axis_points","y_pts","value_range","multiplier","old_multiplier","zero_index","indexOf","interval_height","old_zero_line","setup_marker_components","setup_aggregation_components","setup_graph_components","y_axis_group","className","inside","x_axis_group","specific_y_group","sum_group","average_group","svg_units_groups","_this3","make_y_axis","make_x_axis","draw_graph","make_y_specifics","animate","start_at","text_start_at","axis_line_class","x_axis_mode","make_anim_x_axis","textContent","point","make_x_line","make_anim_y_axis","make_anim_y_specifics","get_y_axis_line_props","text_end_at","_this5","make_y_line","y_axis_mode","draw_new_graph_and_animate","svg_units","make_path","_this6","y_tops","make_new_units","Array","_this7","update_values","make_new_units_for_dataset","x_values","y_values","dataset_index","no_of_datasets","group","unit_args","data_unit","_this9","draw","_this10","toUpperCase","line_type","_this11","relX","pageX","pageY","map_tooltip_x_position_and_show","x_val","y_min_tops","formatted","_this12","set_values","show_tip","updating","sum_units","_this13","old_specific_values","sum","average","indices_to_remove","auto","unshift","splice","new_y","new_x","elements_to_animate","old_x_values","old_y_axis_tops","old_y_values","no_of_extra_pts","_this16","calc_y_dependencies","animate_graphs","run_animation","y_point","x_point","data_set","removeChild","_this17","_this18","calc_old_and_new_postions","old_x","old_y","path","animate_path","animate_units","new_path_str","join","path_args","region_path","reg_start_pt","reg_end_pt","region_args","_this19","last_old_x_pos","last_old_y_pos","last_new_x_pos","last_new_y_pos","filler_x","Math","abs","filler_y","old_pos","new_pos","old_vals","new_vals","last_line_pos","make_new_axis_anim_lines","x_line","_this20","transform","_this21","add_and_animate_y_line","_this22","add_and_animate_line","superimposed_positions","superimposed_values","no_of_extras","filler_vals","filler_pos","extra_values","extra_positions","label_class","x_pos","allowed_space","allowed_letters","line","text","x_level","y_pos","darker","y_level","stroke","specific","axis_label_class","y_line","min_bound","pos_no_of_parts","neg_no_of_parts","part_size","max_val","parseInt","max","min_val","min","get_params","value1","value2","bound1","bound2","no_of_parts_1","no_of_parts_2","interval_size","_this23","calc_upper_bound_and_no_of_parts","calc_no_of_parts","abs_min_val","no_of_parts","get_intervals","start","count","intervals","pow","divisor","ceil","all_values","_this24","y_top","total_width","_this25","space_width","current_x","get_bar_height_and_y_attr","radius","bar_obj","dot_obj","cx","cy","BarChart","update_current_data_point","overlay","update_overlay","svg_unit","attributes","keys","filter","attr","specified","name","nodeValue","LineChart","Object","getPrototypeOf","prototype","region_fill","setup_path_groups","paths_groups","x_positions","y_positions","points_str","gradient_id","gradient_def","set_gradient_stop","grad_elem","PercentageChart","max_slices","max_legend_points","marginTop","marginBottom","paddingTop","chart_div","chart","percentage_bar","slice_totals","all_totals","total","totals","sort","a","b","sum_of_others","legend_totals","grand_total","reduce","slices","g_off","p_off","formatted_labels","percent","Heatmap","domain","subdomain","discrete_domains","count_label","today","Date","add_days","legend_colors","setFullYear","getFullYear","first_week_start","toDateString","last_week_start","getDay","no_of_cols","get_weeks_between","domain_label_group","data_groups","distribution","get_distribution","month_names","render_all_weeks_and_store_x_values","no_of_weeks","current_week_sunday","week_col","current_month","getMonth","months","month_weeks","month_start_points","data_group","month_change","day","get_week_squares_group","render_month_labels","current_date","week_col_change","square_side","data_value","color_index","timestamp","floor","getTime","get_max_checkpoint","round","get_dd_mm_yyyy","next_date","shift","pop","month_name","substring","call","querySelectorAll","display","date_parts","month","mapper_array","data_values","data_max_value","distribution_step","checkpoint","date_str","result","setMinutes","getMinutes","getTimezoneOffset","date","dd","getDate","mm","start_date_str","end_date_str","get_days_between","treat_as_utc","number_of_days","setDate"],"mappings":"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"}